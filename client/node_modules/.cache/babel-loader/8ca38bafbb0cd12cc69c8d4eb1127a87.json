{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nconst {\n  kakao\n} = window;\nexport default function MapPage(_ref) {\n  _s();\n\n  let {\n    logo\n  } = _ref;\n  useEffect(() => {\n    var container = document.getElementById(\"map\");\n    var options = {\n      center: new kakao.maps.LatLng(37.365264512305174, 127.10676860117488),\n      level: 3\n    };\n    var map = new kakao.maps.Map(container, options);\n    var markerPosition = new kakao.maps.LatLng(37.365264512305174, 127.10676860117488);\n    var marker = new kakao.maps.Marker({\n      position: markerPosition\n    });\n    marker.setMap(map);\n  }, []);\n  var mapContainer = document.getElementById('map'),\n      // 지도를 표시할 div\n  mapOption = {\n    center: new kakao.maps.LatLng(37.56646, 126.98121),\n    // 지도의 중심좌표\n    level: 3,\n    // 지도의 확대 레벨\n    mapTypeId: kakao.maps.MapTypeId.ROADMAP // 지도종류\n\n  }; // 지도를 생성한다\n\n  var map = new kakao.maps.Map(mapContainer, mapOption);\n\n  function locationLoadSuccess(pos) {\n    // 현재 위치 받아오기\n    var currentPos = new kakao.maps.LatLng(pos.coords.latitude, pos.coords.longitude); // 지도 이동(기존 위치와 가깝다면 부드럽게 이동)\n\n    map.panTo(currentPos); // 마커 생성\n\n    var marker = new kakao.maps.Marker({\n      position: currentPos\n    }); // 기존에 마커가 있다면 제거\n\n    marker.setMap(null);\n    marker.setMap(map);\n  }\n\n  ;\n\n  function locationLoadError(pos) {\n    alert('위치 정보를 가져오는데 실패했습니다.');\n  }\n\n  ; // 위치 가져오기 버튼 클릭시\n\n  function getCurrentPosBtn() {\n    navigator.geolocation.getCurrentPosition(locationLoadSuccess, locationLoadError);\n  }\n\n  ;\n}\n\n_s(MapPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MapPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"sources":["/Users/junghoo515/meet-in-the-middle/client/src/pages/map.js"],"names":["React","useEffect","kakao","window","MapPage","logo","container","document","getElementById","options","center","maps","LatLng","level","map","Map","markerPosition","marker","Marker","position","setMap","mapContainer","mapOption","mapTypeId","MapTypeId","ROADMAP","locationLoadSuccess","pos","currentPos","coords","latitude","longitude","panTo","locationLoadError","alert","getCurrentPosBtn","navigator","geolocation","getCurrentPosition"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYC,MAAlB;AAGA,eAAe,SAASC,OAAT,OAA2B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACtCJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAhB;AACA,QAAIC,OAAO,GAAG;AACVC,MAAAA,MAAM,EAAE,IAAIR,KAAK,CAACS,IAAN,CAAWC,MAAf,CAAsB,kBAAtB,EAA0C,kBAA1C,CADE;AAEVC,MAAAA,KAAK,EAAE;AAFG,KAAd;AAKA,QAAIC,GAAG,GAAG,IAAIZ,KAAK,CAACS,IAAN,CAAWI,GAAf,CAAmBT,SAAnB,EAA8BG,OAA9B,CAAV;AACA,QAAIO,cAAc,GAAG,IAAId,KAAK,CAACS,IAAN,CAAWC,MAAf,CACjB,kBADiB,EAEjB,kBAFiB,CAArB;AAIA,QAAIK,MAAM,GAAG,IAAIf,KAAK,CAACS,IAAN,CAAWO,MAAf,CAAsB;AAC/BC,MAAAA,QAAQ,EAAEH;AADqB,KAAtB,CAAb;AAIAC,IAAAA,MAAM,CAACG,MAAP,CAAcN,GAAd;AACH,GAjBQ,EAiBN,EAjBM,CAAT;AAkBA,MAAIO,YAAY,GAAGd,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,MAAmD;AAC/Cc,EAAAA,SAAS,GAAG;AACRZ,IAAAA,MAAM,EAAE,IAAIR,KAAK,CAACS,IAAN,CAAWC,MAAf,CAAsB,QAAtB,EAAgC,SAAhC,CADA;AAC4C;AACpDC,IAAAA,KAAK,EAAE,CAFC;AAEE;AACVU,IAAAA,SAAS,EAAErB,KAAK,CAACS,IAAN,CAAWa,SAAX,CAAqBC,OAHxB,CAGgC;;AAHhC,GADhB,CAnBsC,CA0BtC;;AACA,MAAIX,GAAG,GAAG,IAAIZ,KAAK,CAACS,IAAN,CAAWI,GAAf,CAAmBM,YAAnB,EAAiCC,SAAjC,CAAV;;AAEA,WAASI,mBAAT,CAA6BC,GAA7B,EAAkC;AAC9B;AACA,QAAIC,UAAU,GAAG,IAAI1B,KAAK,CAACS,IAAN,CAAWC,MAAf,CAAsBe,GAAG,CAACE,MAAJ,CAAWC,QAAjC,EAA2CH,GAAG,CAACE,MAAJ,CAAWE,SAAtD,CAAjB,CAF8B,CAI9B;;AACAjB,IAAAA,GAAG,CAACkB,KAAJ,CAAUJ,UAAV,EAL8B,CAO9B;;AACA,QAAIX,MAAM,GAAG,IAAIf,KAAK,CAACS,IAAN,CAAWO,MAAf,CAAsB;AAC/BC,MAAAA,QAAQ,EAAES;AADqB,KAAtB,CAAb,CAR8B,CAY9B;;AACAX,IAAAA,MAAM,CAACG,MAAP,CAAc,IAAd;AACAH,IAAAA,MAAM,CAACG,MAAP,CAAcN,GAAd;AACH;;AAAA;;AAED,WAASmB,iBAAT,CAA2BN,GAA3B,EAAgC;AAC5BO,IAAAA,KAAK,CAAC,sBAAD,CAAL;AACH;;AAAA,GAhDqC,CAkDtC;;AACA,WAASC,gBAAT,GAA4B;AACxBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCZ,mBAAzC,EAA8DO,iBAA9D;AACH;;AAAA;AAEJ;;GAvDuB7B,O;;KAAAA,O","sourcesContent":["import React, { useEffect } from \"react\";\nconst { kakao } = window;\n\n\nexport default function MapPage({ logo }) {\n    useEffect(() => {\n        var container = document.getElementById(\"map\");\n        var options = {\n            center: new kakao.maps.LatLng(37.365264512305174, 127.10676860117488),\n            level: 3,\n        };\n\n        var map = new kakao.maps.Map(container, options);\n        var markerPosition = new kakao.maps.LatLng(\n            37.365264512305174,\n            127.10676860117488\n        );\n        var marker = new kakao.maps.Marker({\n            position: markerPosition,\n        });\n\n        marker.setMap(map);\n    }, []);\n    var mapContainer = document.getElementById('map'), // 지도를 표시할 div\n        mapOption = {\n            center: new kakao.maps.LatLng(37.56646, 126.98121), // 지도의 중심좌표\n            level: 3, // 지도의 확대 레벨\n            mapTypeId: kakao.maps.MapTypeId.ROADMAP // 지도종류\n        };\n\n    // 지도를 생성한다\n    var map = new kakao.maps.Map(mapContainer, mapOption);\n\n    function locationLoadSuccess(pos) {\n        // 현재 위치 받아오기\n        var currentPos = new kakao.maps.LatLng(pos.coords.latitude, pos.coords.longitude);\n\n        // 지도 이동(기존 위치와 가깝다면 부드럽게 이동)\n        map.panTo(currentPos);\n\n        // 마커 생성\n        var marker = new kakao.maps.Marker({\n            position: currentPos\n        });\n\n        // 기존에 마커가 있다면 제거\n        marker.setMap(null);\n        marker.setMap(map);\n    };\n\n    function locationLoadError(pos) {\n        alert('위치 정보를 가져오는데 실패했습니다.');\n    };\n\n    // 위치 가져오기 버튼 클릭시\n    function getCurrentPosBtn() {\n        navigator.geolocation.getCurrentPosition(locationLoadSuccess, locationLoadError);\n    };\n\n}"]},"metadata":{},"sourceType":"module"}