{"ast":null,"code":"var _jsxFileName = \"/Users/junghoo515/meet-in-the-middle/client/src/pages/KakaoMap.js\",\n    _s = $RefreshSig$();\n\n//kakaoMap.js\n\n/*global kakao*/\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window; //! import axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\nexport default function MapDiv(_ref) {\n  _s();\n\n  let {\n    curAdd\n  } = _ref;\n  //   console.log(curAdd);\n  let add = curAdd ? curAdd : \"태평로1가 31\"; //   console.log(add);\n\n  useEffect(() => {\n    console.log(add, \"여기\");\n    var mapContainer = document.getElementById(\"map\"),\n        // 지도를 표시할 div\n    mapOption = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n\n    }; // 지도를 생성합니다\n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 주소-좌표 변환 객체를 생성합니다\n\n    var geocoder = new kakao.maps.services.Geocoder(); // 주소로 좌표를 검색합니다\n\n    geocoder.addressSearch(add, function (result, status) {\n      // 정상적으로 검색이 완료됐으면\n      if (status === kakao.maps.services.Status.OK) {\n        var coords = new kakao.maps.LatLng(result[0].y, result[0].x); // 결과값으로 받은 위치를 마커로 표시합니다\n\n        var marker = new kakao.maps.Marker({\n          map: map,\n          position: coords\n        }); // 인포윈도우로 장소에 대한 설명을 표시합니다\n\n        var infowindow = new kakao.maps.InfoWindow({\n          content: '<div style=\"width:150px;text-align:center;padding:6px 0;\">여기</div>'\n        });\n        infowindow.open(map, marker); // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n\n        map.setCenter(coords);\n      }\n    });\n  }, [add]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n}\n\n_s(MapDiv, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MapDiv;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapDiv\");","map":{"version":3,"sources":["/Users/junghoo515/meet-in-the-middle/client/src/pages/KakaoMap.js"],"names":["React","useEffect","kakao","window","MapDiv","curAdd","add","console","log","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","map","Map","geocoder","services","Geocoder","addressSearch","result","status","Status","OK","coords","y","x","marker","Marker","position","infowindow","InfoWindow","content","open","setCenter"],"mappings":";;;AAAA;;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYC,MAAlB,C,CACA;AACA;;AAEA,eAAe,SAASC,MAAT,OAA4B;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AACvC;AACA,MAAIC,GAAG,GAAGD,MAAM,GAAGA,MAAH,GAAY,UAA5B,CAFuC,CAGvC;;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,IAAjB;AACA,QAAIG,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;AAAA,QAAmD;AAC/CC,IAAAA,SAAS,GAAG;AACRC,MAAAA,MAAM,EAAE,IAAIX,KAAK,CAACY,IAAN,CAAWC,MAAf,CAAsB,SAAtB,EAAiC,UAAjC,CADA;AAC8C;AACtDC,MAAAA,KAAK,EAAE,CAFC,CAEE;;AAFF,KADhB,CAFY,CAQZ;;AACA,QAAIC,GAAG,GAAG,IAAIf,KAAK,CAACY,IAAN,CAAWI,GAAf,CAAmBT,YAAnB,EAAiCG,SAAjC,CAAV,CATY,CAWZ;;AACA,QAAIO,QAAQ,GAAG,IAAIjB,KAAK,CAACY,IAAN,CAAWM,QAAX,CAAoBC,QAAxB,EAAf,CAZY,CAcZ;;AACAF,IAAAA,QAAQ,CAACG,aAAT,CAAuBhB,GAAvB,EAA4B,UAAUiB,MAAV,EAAkBC,MAAlB,EAA0B;AAClD;AACA,UAAIA,MAAM,KAAKtB,KAAK,CAACY,IAAN,CAAWM,QAAX,CAAoBK,MAApB,CAA2BC,EAA1C,EAA8C;AAC1C,YAAIC,MAAM,GAAG,IAAIzB,KAAK,CAACY,IAAN,CAAWC,MAAf,CAAsBQ,MAAM,CAAC,CAAD,CAAN,CAAUK,CAAhC,EAAmCL,MAAM,CAAC,CAAD,CAAN,CAAUM,CAA7C,CAAb,CAD0C,CAG1C;;AACA,YAAIC,MAAM,GAAG,IAAI5B,KAAK,CAACY,IAAN,CAAWiB,MAAf,CAAsB;AAC/Bd,UAAAA,GAAG,EAAEA,GAD0B;AAE/Be,UAAAA,QAAQ,EAAEL;AAFqB,SAAtB,CAAb,CAJ0C,CAS1C;;AACA,YAAIM,UAAU,GAAG,IAAI/B,KAAK,CAACY,IAAN,CAAWoB,UAAf,CAA0B;AACvCC,UAAAA,OAAO,EACH;AAFmC,SAA1B,CAAjB;AAIAF,QAAAA,UAAU,CAACG,IAAX,CAAgBnB,GAAhB,EAAqBa,MAArB,EAd0C,CAgB1C;;AACAb,QAAAA,GAAG,CAACoB,SAAJ,CAAcV,MAAd;AACH;AACJ,KArBD;AAsBH,GArCQ,EAqCN,CAACrB,GAAD,CArCM,CAAT;AAuCA,sBAAO;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GA7CuBF,M;;KAAAA,M","sourcesContent":["//kakaoMap.js\n\n/*global kakao*/\nimport React, { useEffect } from \"react\";\nconst { kakao } = window;\n//! import axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\nexport default function MapDiv({ curAdd }) {\n    //   console.log(curAdd);\n    let add = curAdd ? curAdd : \"태평로1가 31\";\n    //   console.log(add);\n\n    useEffect(() => {\n        console.log(add, \"여기\");\n        var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n            mapOption = {\n                center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\n                level: 3, // 지도의 확대 레벨\n            };\n\n        // 지도를 생성합니다\n        var map = new kakao.maps.Map(mapContainer, mapOption);\n\n        // 주소-좌표 변환 객체를 생성합니다\n        var geocoder = new kakao.maps.services.Geocoder();\n\n        // 주소로 좌표를 검색합니다\n        geocoder.addressSearch(add, function (result, status) {\n            // 정상적으로 검색이 완료됐으면\n            if (status === kakao.maps.services.Status.OK) {\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n                // 결과값으로 받은 위치를 마커로 표시합니다\n                var marker = new kakao.maps.Marker({\n                    map: map,\n                    position: coords,\n                });\n\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\n                var infowindow = new kakao.maps.InfoWindow({\n                    content:\n                        '<div style=\"width:150px;text-align:center;padding:6px 0;\">여기</div>',\n                });\n                infowindow.open(map, marker);\n\n                // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n                map.setCenter(coords);\n            }\n        });\n    }, [add]);\n\n    return <div id=\"map\"></div>;\n}"]},"metadata":{},"sourceType":"module"}