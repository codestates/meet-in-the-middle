[{"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/index.js":"1","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/App.js":"2","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Login.js":"3","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MapPage.js":"4","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/dummydata.js":"5","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/KakaoMap.js":"6","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Meet.js":"7","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MyProfileModal.js":"8","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/test.js":"9","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/plusFriendModal.js":"10","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/dummy.js":"11","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/SignUpModal.js":"12","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/mapDiv.js":"13","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/ListUpMapDiv.js":"14","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/FindInfo.js":"15","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/menuModal.js":"16"},{"size":242,"mtime":1636707203472,"results":"17","hashOfConfig":"18"},{"size":1621,"mtime":1637232252546,"results":"19","hashOfConfig":"18"},{"size":4418,"mtime":1637232252549,"results":"20","hashOfConfig":"18"},{"size":6867,"mtime":1637232252550,"results":"21","hashOfConfig":"18"},{"size":752,"mtime":1637229182154,"results":"22","hashOfConfig":"18"},{"size":11102,"mtime":1637229453675,"results":"23","hashOfConfig":"18"},{"size":660,"mtime":1637229182153,"results":"24","hashOfConfig":"18"},{"size":3329,"mtime":1637232252550,"results":"25","hashOfConfig":"18"},{"size":2361,"mtime":1637229267359,"results":"26","hashOfConfig":"18"},{"size":701,"mtime":1637229267359,"results":"27","hashOfConfig":"18"},{"size":7951,"mtime":1637229267357,"results":"28","hashOfConfig":"18"},{"size":3197,"mtime":1637245222572,"results":"29","hashOfConfig":"18"},{"size":4803,"mtime":1637229267359,"results":"30","hashOfConfig":"18"},{"size":4465,"mtime":1637229267358,"results":"31","hashOfConfig":"18"},{"size":1456,"mtime":1637232252547,"results":"32","hashOfConfig":"18"},{"size":970,"mtime":1637229267359,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"adueu0",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/index.js",[],["76","77"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/App.js",["78","79"],"import React, { useState, useEffect } from \"react\";\nimport Login from \"./pages/Login\";\nimport MapPage from \"./pages/MapPage\";\nimport SignUpModal from \"./pages/SignUpModal\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport logo from \"./logo-1.svg\";\nexport default function App() {\n  const [islogin, setislogin] = useState(false);\n  const [userinfo, setuserinfo] = useState(null);\n  const navigate = useNavigate();\n\n  const isAuthenticated = () => {\n    axios\n      .get(\"https://localhost:4000/auth\")\n      .then((res) => {\n        //console.log(res.data.data.needInfo);\n        setislogin(true);\n        setuserinfo(res.data.data.needInfo);\n        navigate(\"/map\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const loginSuccess = () => {\n    isAuthenticated();\n  };\n\n  // const handleSignout = () => {\n  //   axios\n  //     .post(\"https://localhost:4000/signout\")\n  //     .then((res) => {\n  //       setislogin(false);\n  //       setuserinfo(null);\n  //       console.log(res);\n  //       navigate(\"/\");\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  useEffect(() => {\n    isAuthenticated();\n  }, []);\n\n  return (\n    <div>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Login logo={logo} islogin={islogin} loginSuccess={loginSuccess} />\n          }\n        ></Route>\n        <Route\n          exact\n          path=\"/map\"\n          element={<MapPage logo={logo} userinfo={userinfo} />}\n        ></Route>\n      </Routes>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Login.js",["80","81","82","83","84"],"import React, { useState, useEffect, useRef } from \"react\";\nimport SignUpModal from \"./SignUpModal\";\nimport FindInfo from \"./FindInfo\";\nimport axios from \"axios\";\n\naxios.defaults.withCredentials = true;\n\nexport default function Login({ logo, loginSuccess }) {\n  const modal = document.getElementsByClassName(\"modal\");\n  const signBtn = document.getElementById(\"sign-btn\");\n  const findBtn = document.getElementById(\"find-btn\");\n  // 모달 관련 useState\n  const [isOpen, setOpen] = useState(false);\n  const [isOpenFind, setOpenFind] = useState(false);\n\n  const signUpModalOpen = () => {\n    setOpen(true);\n  };\n\n  const findModalOpen = () => {\n    setOpenFind(true);\n    console.log(isOpenFind);\n  };\n\n  const ModalOff = () => {\n    setOpen(false);\n    setOpenFind(false);\n  };\n\n  // 로그인 통신\n  const [logininfo, setlogininfo] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const inputValue = (key) => (e) => {\n    setlogininfo({ ...logininfo, [key]: e.target.value });\n  };\n\n  const handleSignin = () => {\n    const login = { email: logininfo.email, password: logininfo.password };\n    //console.log(login);\n\n    if (!login.email || !login.password) {\n      alert(\"이메일과 비밀번호를 입력하세요\");\n    }\n    axios\n      .post(\"https://localhost:4000/signin\", login, {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      })\n      .then((res) => {\n        //console.log(res);\n        loginSuccess(res);\n      });\n  };\n\n  // window.onclick = function (event) {\n  //   if (event.target !== modal[0] && isOpen && event.target !== signBtn) {\n  //     ModalOff();\n  //   }\n  // };\n\n  return (\n    <div>\n      <center>\n        <form onSubmit={(e) => e.preventDefault()}>\n          <body className=\"inner-container\">\n            <section className=\"identity\">\n              {/* <h1>로고 및 소개 영역</h1> */}\n              <div className=\"intro-area\">\n                <div className=\"container\">\n                  <img src={logo} alt=\"logo\" id=\"logo-login\" />\n                  <img\n                    className=\"introduction\"\n                    src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa28ae486-c85a-4ee0-830a-0664a564da35%2Fintro1.png?table=block&id=d819f83b-cf9f-4c21-9de3-505e52b85e41&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n                    alt=\"intro\"\n                  />\n                </div>\n              </div>\n            </section>\n            <section className=\"inputArea\">\n              {/* <h1>입력 영역</h1> */}\n              <div className=\"input-container\">\n                <img\n                  className=\"welcome\"\n                  src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd24a9efc-85b5-4fd9-bc10-b970598faaf7%2Fwelcome.png?table=block&id=55d6901b-6ddc-466a-acb2-0e482f6e9248&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n                  alt=\"backImg\"\n                ></img>\n                <input\n                  className=\"page1\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  onfocus=\"this.placeholder=''\"\n                  onblur=\"this.placeholder = 'email'\"\n                />\n                <input\n                  className=\"page1\"\n                  type=\"password\"\n                  placeholder=\"password\"\n                  onChange={inputValue(\"password\")}\n                  onfocus=\"this.placeholder=''\"\n                  onblur=\"this.placeholder = 'password'\"\n                />\n                <button className=\"page1 button\" onClick={handleSignin}>\n                  LOGIN\n                </button>\n\n                <button\n                  className=\"page1 button\"\n                  id=\"sign-btn\"\n                  onClick={signUpModalOpen}\n                >\n                  SIGN UP\n                </button>\n                <div id=\"find-Btn\" onClick={findModalOpen}>\n                  아이디 / 비밀번호 찾기\n                </div>\n              </div>\n            </section>\n          </body>\n        </form>\n        {isOpen ? <SignUpModal signUpModalOff={ModalOff} /> : null}\n        {isOpenFind ? <FindInfo findModalOff={ModalOff} /> : null}\n      </center>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MapPage.js",["85","86","87","88","89","90","91","92","93"],"import React, { useState, useEffect } from \"react\";\nimport MyProfileModal from \"./MyProfileModal\";\nimport MapDiv from \"./mapDiv\";\nimport PlusFriend from \"./plusFriendModal\";\nimport KakaoMapCurrent from \"./test\";\nimport userInfo from \"../dummy\";\nimport ListUpMapDiv from \"./ListUpMapDiv\";\nimport menuModal from \"./menuModal\";\nconst { kakao } = window;\n\n//axios.defaults.withCredentials = true;\n\nexport default function MapPage({ logo, userinfo }) {\n  //console.log(props);\n  let curDeg = [37.365264512305174, 127.10676860117488];\n  const [curAdd, setCurAdd] = useState(\"\");\n  const [isOpenMyProfile, setOpenMyProfile] = useState(false);\n  const [isSearch, setIsSearch] = useState(false);\n  const [address, setAddress] = useState(\"\");\n  const [onPlus, setOnPlus] = useState(false);\n  const [friendList, setfriendList] = useState([]);\n  const [myCurAdd, setMyCurAdd] = useState([]);\n  const [meetOn, setMeetOn] = useState(false);\n\n  const [attend, setAttend] = useState([]);\n\n  // const [test, setTest] = useState(false);\n\n  friendList.map((e) => console.log(e));\n\n  // const testBtn = () => {\n  //   setTest(true);\n  // };\n\n  const searchInputOn = () => {\n    setIsSearch(true);\n  };\n\n  const searchBtnOn = () => {\n    setCurAdd(address);\n  };\n\n  const inputAdd = (e) => {\n    setAddress(e.target.value);\n  };\n\n  const myProfileModalOpen = () => {\n    setOpenMyProfile(true);\n  };\n\n  const myProfileModalOff = () => {\n    setOpenMyProfile(false);\n  };\n\n  const plusBtnOn = () => {\n    setOnPlus(true);\n    setOpenMyProfile(false);\n  };\n\n  const plusBtnOff = () => {\n    setOnPlus(false);\n  };\n\n  const meetBtnOn = () => {\n    setMeetOn(true);\n  };\n\n  const meetBtnOff = () => {\n    setMeetOn(false);\n  };\n\n  const togle = (e) => {\n    console.log(e);\n  };\n\n  return (\n    <div className=\"main\">\n      {/* <button onClick={testBtn}>주소 불러오기</button> */}\n      <section className=\"top\">\n        <div className=\"logo\" id=\"mapPage-png\">\n          <img\n            id=\"top-bar-icon\"\n            src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4faf4b54-71c2-426b-9c2d-32af8d906228%2Ficon.png?table=block&id=2fcd1510-28b2-45c9-b3f5-3a28d70dcf40&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n            alt=\"icon\n          \"\n          />\n        </div>\n        <div id=\"top-bar\">\n          {\" \"}\n          <img\n            id=\"top-bar-horiz\"\n            src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc6d83dd2-fc90-4a4e-8862-4e01888c4213%2Fhorizon-logo.png?table=block&id=4d9e8394-e262-404f-8d02-47db9e43fee8&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n            alt=\"horiz\n          \"\n          />\n        </div>\n        <div id=\"logOutBtn\">Log out</div>\n        <img\n          id=\"top-bar-my\"\n          onClick={myProfileModalOpen}\n          src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbd6dba21-ec32-47e2-8070-d49a7d0b7edf%2Ficon.png?table=block&id=90af43aa-02f0-40cb-9a42-47cceda1d49a&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n          alt=\"myPage\n          \"\n        />\n      </section>\n      {/* <menuModal /> */}\n      {isOpenMyProfile ? (\n        <MyProfileModal myProfileModalOff={myProfileModalOff} />\n      ) : null}\n      {onPlus ? (\n        <PlusFriend\n          plusBtnOff={plusBtnOff}\n          friendList={friendList}\n          setfriendList={setfriendList}\n        />\n      ) : null}\n\n      <body className=\"inner\">\n        <div className=\"side\">\n          <div id=\"searchDiv\">\n            <input\n              type=\"text\"\n              id=\"searchInput\"\n              onChange={(e) => inputAdd(e)}\n              placeholder=\"주소 검색\"\n            />\n            <div id=\"searchBtnDiv\">\n              <img\n                id=\"searchBtn\"\n                src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa923dcd3-8f28-4976-a20a-ce78bea2a696%2FsearchBtn.png?table=block&id=0ee8122c-4005-42aa-8370-720b49bb63f5&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n                alt=\"searchBtn\"\n                onClick={searchBtnOn}\n              />\n            </div>\n          </div>\n          <ul>\n            {userInfo.map((e) => (\n              <li>\n                <div className=\"friendListDiv\">\n                  <img src={e.image} className=\"profileImg\" alt=\"\" />\n                  <div className=\"freindDIv\">{e.username}</div>\n                  <div className=\"sliceDiv\">\n                    <label class=\"switch\">\n                      <input type=\"checkbox\" onClick={togle(e)} />\n                      <span class=\"slider round\"></span>\n                    </label>\n                  </div>\n                </div>\n              </li>\n            ))}\n            <div className=\"friendListDiv\" onClick={plusBtnOn}>\n              <img\n                id=\"plusBtn\"\n                src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F89fa1eb6-4e67-4ce8-8779-fd07c83ec002%2FplusBtn.png?table=block&id=279a2423-759b-4997-9c10-4ed7a2d5d71a&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n                alt=\"plusBtn\"\n              />\n              <div className=\"plusMsg\">친구 추가</div>\n            </div>\n          </ul>\n          <div className=\"meetBtnDiv\" onClick={meetBtnOn}>\n            <img\n              className=\"letsMeetBtn\"\n              src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F5214f122-f39c-414f-8791-19a013a0b3bb%2Flets-blue1.png?table=block&id=37426a87-2085-479c-8678-243e37dddcdf&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n              alt=\"letsMeet\"\n            />\n          </div>\n          <div id=\"reMeetBtn\" onClick={meetBtnOff}>\n            - Re Meet -\n          </div>\n        </div>\n        <div className=\"map\">\n          {/* {isOpenMyProfile ? (\n            <MyProfileModal myProfileModalOff={myProfileModalOff} />\n          ) : null} */}\n          <div>\n            {meetOn ? (\n              <ListUpMapDiv\n                myCurAdd={myCurAdd}\n                setMyCurAdd={setMyCurAdd}\n                userInfo={userInfo}\n              />\n            ) : (\n              <MapDiv\n                curAdd={curAdd}\n                myCurAdd={myCurAdd}\n                setMyCurAdd={setMyCurAdd}\n              />\n            )}\n          </div>\n        </div>\n      </body>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/dummydata.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/KakaoMap.js",["94"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Meet.js",["95","96"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MyProfileModal.js",["97","98","99"],"import React, { useEffect, useState } from \"react\";\nimport userInfo from \"../dummy.js\";\nimport axios from \"axios\";\n\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\naxios.defaults.withCredentials = true;\n\nexport default function MyProfileModal({ myProfileModalOff }) {\n  const [findInfo, setfindInfo] = useState({\n    id: \"\",\n    image: \"\",\n    email: \"\",\n    userName: \"\",\n    nickName: \"\",\n    password: \"\",\n    phone: \"\",\n  });\n\n  const [changeInfo, setchangeInfo] = useState({\n    id: \"\",\n    nickName: \"\",\n    password: \"\",\n    phone: \"\",\n  });\n\n  const myInfo = async () => {\n    await axios.get(\"https://localhost:4000/auth\").then((res) => {\n      setfindInfo(res.data.data.needInfo);\n      //console.log(findInfo);\n    });\n  };\n\n  const inputValue = (key) => (e) => {\n    setchangeInfo({ ...changeInfo, [key]: e.target.value });\n  };\n\n  const handleChangeinfo = () => {\n    for (let prop in changeInfo) {\n      if (changeInfo[prop] === \"\") {\n        changeInfo[prop] = findInfo[prop];\n      }\n    }\n    console.log(changeInfo);\n    axios.post(\"https://localhost:4000/userinfo\", changeInfo, {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    });\n  };\n\n  const handlewithdrawal = () => {\n    //console.log(findInfo);\n    axios.post(\"https://localhost:4000/signwithdrawal\", findInfo, {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    });\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"close-btn\" onClick={myProfileModalOff}>\n        X\n      </div>\n\n      <h3 onClick={myInfo}>회원 정보</h3>\n      <div id=\"myPhotoDiv\">\n        <img\n          id=\"profile-img\"\n          src=\"https://pbs.twimg.com/profile_images/549171896013438979/rqtU6Cvn_400x400.png\"\n          alt=\"profile-img\"\n          onChange={inputValue(\"image\")}\n        />\n      </div>\n      <fieldset>\n        <span>이름: {findInfo.userName}</span>\n      </fieldset>\n      <fieldset>\n        <span>이메일: {findInfo.email}</span>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"info-modal-list\"\n          type=\"number\"\n          type=\"text\"\n          placeholder={findInfo.nickName}\n          onChange={inputValue(\"nickName\")}\n        ></input>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"info-modal-list\"\n          type=\"password\"\n          placeholder=\"password\"\n          onChange={inputValue(\"password\")}\n        ></input>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"info-modal-list\"\n          type=\"password\"\n          placeholder=\"password confirm\"\n        ></input>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"info-modal-list\"\n          type=\"number\"\n          placeholder={findInfo.phone}\n          onChange={inputValue(\"phone\")}\n        ></input>\n      </fieldset>\n      <button className=\"modal-btn\" onClick={handleChangeinfo}>\n        회원정보 수정\n      </button>\n      <div id=\"myinfo-btn2\">\n        {/* <span className=\"myinfo-btn\" onClick={() => this.handleSignout}>\n          <a href={\"/\"}>로그아웃</a>\n        </span> */}\n        <span> / </span>\n        <span className=\"myinfo-btn\" onClick={handlewithdrawal}>\n          <a href={\"/\"}>회원탈퇴</a>\n        </span>\n      </div>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/test.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/plusFriendModal.js",["100"],"import React, { useState } from \"react\";\n//! import axios from \"axios\";\n\nexport default function PlusFriend({ plusBtnOff, friendList, setfriendList }) {\n  return (\n    <div className=\"modal\">\n      <div className=\"close-btn\" onClick={plusBtnOff}>X</div>\n      <form onSubmit={(e) => e.preventDefault()}>\n        <fieldset>\n          <input className=\"modal-list\" type=\"text\" placeholder=\"Name\"></input>\n        </fieldset>\n        <fieldset>\n          <input className=\"modal-list\" type=\"number\" placeholder=\"Phone\"></input>\n        </fieldset>\n        <button className=\"modal-btn\">친구 추가</button>\n      </form>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/dummy.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/SignUpModal.js",["101"],"import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\naxios.defaults.withCredentials = true;\n\nexport default function SignUpModal({ signUpModalOff }) {\n  const [userinfo, setuserinfo] = useState({\n    email: \"\",\n    password: \"\",\n    passwordCheck: \"\",\n    userName: \"\",\n    nickName: \"\",\n    birth: \"\",\n    phone: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const inputValue = (key) => (e) => {\n    setuserinfo({ ...userinfo, [key]: e.target.value });\n  };\n\n  const handleSignup = () => {\n    const user = {\n      email: userinfo.email,\n      password: userinfo.password,\n      userName: userinfo.userName,\n      nickName: userinfo.nickName,\n      birth: userinfo.birth,\n      phone: userinfo.phone,\n    };\n\n    if (\n      !user.email ||\n      !user.password ||\n      !user.userName ||\n      !user.nickName ||\n      !user.birth ||\n      !user.phone\n    ) {\n      alert(\"모든 항목은 필수입니다\");\n    }\n    //console.log(user.email);\n    axios\n      .post(\"https://localhost:4000/signup\", user, {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      })\n      .then((res) => {\n        if (res.payload.success) {\n          navigate(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div>\n      <div className=\"modal\" id=\"signUpModal\">\n        <div className=\"close-btn\" onClick={signUpModalOff}> x </div>\n        <h3 className=\"singup-btn\">SING UP</h3>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"text\"\n            placeholder=\"Email\"\n            onChange={inputValue(\"email\")}\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"password\"\n            placeholder=\"password\"\n            onChange={inputValue(\"password\")}\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"password\"\n            placeholder=\"password confirm\"\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"text\"\n            placeholder=\"Name\"\n            onChange={inputValue(\"userName\")}\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"text\"\n            placeholder=\"Nick name\"\n            onChange={inputValue(\"nickName\")}\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"text\"\n            placeholder=\"Birth\"\n            onChange={inputValue(\"birth\")}\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"text\"\n            placeholder=\"Phone\"\n            onChange={inputValue(\"phone\")}\n          ></input>\n        </fieldset>\n        <button className=\"modal-btn\" onClick={handleSignup}>\n          가입하기\n        </button>\n      </div>\n    </div>\n  );\n}","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/mapDiv.js",["102","103"],"/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nconst { kakao } = window;\n//! import axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\n//더미 데이터만 완성해서 보여주기 , 서버 연결해서 보여주기\n\nexport default function MapDiv({ curAdd, myCurAdd, setMyCurAdd }) {\n  const [inputAdd, setInputAdd] = useState([37.541, 126.986]);\n  let add = curAdd ? curAdd : null;\n\n  //   const selectKeyWord = () => {\n  //     console.log(\"선택\");\n  //   };\n\n  useEffect(() => {\n    let markers = [];\n    let infos = [];\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setInputAdd([position.coords.latitude, position.coords.longitude]);\n        // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n      });\n    }\n\n    // console.log(inputAdd);\n    setMyCurAdd([inputAdd[0], inputAdd[1]]);\n\n    var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n      mapOption = {\n        center: new kakao.maps.LatLng(inputAdd[0], inputAdd[1]), // 지도의 중심좌표\n        level: 10, // 지도의 확대 레벨\n      };\n\n    // 지도를 생성합니다\n    var map = new kakao.maps.Map(mapContainer, mapOption);\n\n    // 주소-좌표 변환 객체를 생성합니다\n    var geocoder = new kakao.maps.services.Geocoder();\n\n    if (add) {\n      console.log(curAdd);\n\n      geocoder.addressSearch(add, function (result, status) {\n        // 정상적으로 검색이 완료됐으면\n        if (status === kakao.maps.services.Status.OK) {\n          var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n          setMyCurAdd([result[0].y, result[0].x]);\n\n          // 결과값으로 받은 위치를 마커로 표시합니다\n          var marker = new kakao.maps.Marker({\n            map: map,\n            position: coords,\n          });\n          markers.push(marker);\n          // 인포윈도우로 장소에 대한 설명을 표시합니다\n          var infowindow = new kakao.maps.InfoWindow({\n            content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${add}</div>`,\n          });\n          infos.push(infowindow);\n          infowindow.open(map, marker);\n\n          // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n          map.setCenter(coords);\n        }\n      });\n    } else {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        const lat = position.coords.latitude, // 위도\n          lon = position.coords.longitude; // 경도\n\n        setMyCurAdd([lat, lon]);\n\n        const locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n          message = '<div style=\"padding:5px;\">현재 위치</div>'; // 인포윈도우에 표시될 내용입니다\n\n        // 마커와 인포윈도우를 표시합니다\n        displayMarker(locPosition, message);\n      });\n\n      function displayMarker(locPosition, message) {\n        // 마커를 생성합니다\n        const marker = new kakao.maps.Marker({\n          map: map,\n          position: locPosition,\n        });\n        markers.push(marker);\n\n        const iwContent = message, // 인포윈도우에 표시할 내용\n          iwRemoveable = true;\n\n        // 인포윈도우를 생성합니다\n        const infowindow = new kakao.maps.InfoWindow({\n          content: iwContent,\n          removable: iwRemoveable,\n        });\n\n        infos.push(infowindow);\n        // 인포윈도우를 마커위에 표시합니다\n        infowindow.open(map, marker);\n\n        // 지도 중심좌표를 접속위치로 변경합니다\n        map.setCenter(locPosition);\n      }\n    }\n\n    // 지도에 마커를 표시합니다\n    kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n      // 클릭한 위도, 경도 정보를 가져옵니다\n      var latlng = mouseEvent.latLng;\n\n      for (let i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n      for (let j = 0; j < infos.length; j++) {\n        infos[j].setMap(null);\n      }\n\n      var marker = new kakao.maps.Marker({\n        position: latlng,\n      });\n\n      const infowindow = new kakao.maps.InfoWindow({\n        content: '<div style=\"padding:5px;\">여기???????</div>',\n      });\n\n      infos.push(infowindow);\n      // 인포윈도우를 마커위에 표시합니다\n      infowindow.open(map, marker);\n\n      markers.push(marker);\n      // 마커 위치를 클릭한 위치로 옮깁니다\n      marker.setMap(map);\n    });\n  }, [add]);\n\n  return <div id=\"map\"></div>;\n}","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/ListUpMapDiv.js",["104"],"import React, { useEffect, useState } from \"react\";\nconst { kakao } = window;\n//! import axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\n//더미 데이터만 완성해서 보여주기 , 서버 연결해서 보여주기\n\nexport default function MapDiv({ myCurAdd, setMyCurAdd, userInfo }) {\n  //* 중심 좌표 로직\n  //   let points = [];\n\n  //   userInfo.forEach((e) => points.push([e.lat, e.lng]));\n\n  //   console.log(points);\n\n  //   function getCentroid(points) {\n  //     var area = 0,\n  //       cx = 0,\n  //       cy = 0;\n\n  //     for (var i = 0; i < points.length; i++) {\n  //       var j = (i + 1) % points.length;\n\n  //       var pt1 = points[i];\n  //       var pt2 = points[j];\n\n  //       var x1 = pt1[0];\n  //       var x2 = pt2[0];\n  //       var y1 = pt1[1];\n  //       var y2 = pt2[1];\n\n  //       area += x1 * y2;\n  //       area -= y1 * x2;\n\n  //       cx += (x1 + x2) * (x1 * y2 - x2 * y1);\n  //       cy += (y1 + y2) * (x1 * y2 - x2 * y1);\n  //     }\n\n  //     area /= 2;\n\n  //     cx = cx / (6.0 * area);\n  //     cy = cy / (6.0 * area);\n\n  //     return {\n  //       x: cx,\n  //       y: cy,\n  //     };\n  //   }\n\n  //   let center = getCentroid(points);\n\n  useEffect(() => {\n    var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n      mapOption = {\n        center: new kakao.maps.LatLng(myCurAdd[0], myCurAdd[1]), // 지도의 중심좌표\n        level: 10, // 지도의 확대 레벨\n      };\n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n    // var positions = [];\n\n    var positions = [\n      {\n        title: \"카카오\",\n        latlng: new kakao.maps.LatLng(33.450705, 126.570677),\n      },\n      {\n        title: \"생태연못\",\n        latlng: new kakao.maps.LatLng(33.450936, 126.569477),\n      },\n      {\n        title: \"텃밭\",\n        latlng: new kakao.maps.LatLng(33.450879, 126.56994),\n      },\n      {\n        title: \"근린공원\",\n        latlng: new kakao.maps.LatLng(33.451393, 126.570738),\n      },\n    ];\n\n    userInfo.forEach((e) => {\n      positions.push({\n        title: `${e.username}`,\n        latlng: new kakao.maps.LatLng(Number(e.lat), Number(e.lng)),\n      });\n    });\n\n    var imageSrc =\n      \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\";\n\n    //* 중심좌표 렌더부분\n    // var centerPint = new kakao.maps.LatLng(center.x, center.y);\n\n    // console.log(center);\n\n    // var centerMarker = new kakao.maps.Marker({\n    //   map: map,\n    //   position: centerPint, // 마커를 표시할 위치\n    // });\n\n    for (var i = 0; i < positions.length; i++) {\n      // 마커 이미지의 이미지 크기 입니다\n\n      //   console.log(positions[i], positions[i].latlng);\n      var imageSize = new kakao.maps.Size(24, 35);\n\n      // 마커 이미지를 생성합니다\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: positions[i].latlng, // 마커를 표시할 위치\n        title: positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n        image: markerImage, // 마커 이미지\n      });\n\n      const infowindow = new kakao.maps.InfoWindow({\n        content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${positions[i].title}</div>`,\n      });\n\n      // 인포윈도우를 마커위에 표시합니다\n      infowindow.open(map, marker);\n    }\n  });\n\n  return <div id=\"map\"></div>;\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/FindInfo.js",["105"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function FindInfo({ findModalOff }) {\n  const [userinfo, setuserinfo] = useState({\n    userName: \"\",\n    birth: \"\",\n    phone: \"\",\n  });\n\n  const inputValue = (key) => (e) => {\n    setuserinfo({ ...userinfo, [key]: e.target.value });\n  };\n\n  const findInfo = () => {\n    const user = {\n      userName: userinfo.userName,\n      birth: userinfo.birth,\n      phone: userinfo.phone,\n    };\n\n    if (!user.userName || !user.birth || !user.phone) {\n      alert(\"모든 항목은 필수입니다\");\n    }\n    axios\n      .post(\"https://localhost:4000/findlongininfo\", user, {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res);\n      });\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"close-btn\" onClick={findModalOff}>\n        X\n      </div>\n      <fieldset>\n        <input className=\"modal-list\" type=\"text\" placeholder=\"Name\"></input>\n      </fieldset>\n      <fieldset>\n        <input className=\"modal-list\" type=\"number\" placeholder=\"Phone\"></input>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"modal-list\"\n          type=\"text\"\n          placeholder=\"Birth day\"\n          onChange={inputValue(\"birth\")}\n        ></input>\n      </fieldset>\n      <button className=\"modal-btn\">아이디 / 비밀번호 찾기</button>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/menuModal.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":48,"column":6,"nodeType":"116","endLine":48,"endColumn":8,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"118","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"119","line":1,"column":38,"nodeType":"112","messageId":"113","endLine":1,"endColumn":44},{"ruleId":"110","severity":1,"message":"120","line":9,"column":9,"nodeType":"112","messageId":"113","endLine":9,"endColumn":14},{"ruleId":"110","severity":1,"message":"121","line":10,"column":9,"nodeType":"112","messageId":"113","endLine":10,"endColumn":16},{"ruleId":"110","severity":1,"message":"122","line":11,"column":9,"nodeType":"112","messageId":"113","endLine":11,"endColumn":16},{"ruleId":"110","severity":1,"message":"118","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"123","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":23},{"ruleId":"110","severity":1,"message":"124","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":17},{"ruleId":"110","severity":1,"message":"125","line":9,"column":9,"nodeType":"112","messageId":"113","endLine":9,"endColumn":14},{"ruleId":"110","severity":1,"message":"126","line":15,"column":7,"nodeType":"112","messageId":"113","endLine":15,"endColumn":13},{"ruleId":"110","severity":1,"message":"127","line":18,"column":10,"nodeType":"112","messageId":"113","endLine":18,"endColumn":18},{"ruleId":"110","severity":1,"message":"128","line":25,"column":10,"nodeType":"112","messageId":"113","endLine":25,"endColumn":16},{"ruleId":"110","severity":1,"message":"129","line":25,"column":18,"nodeType":"112","messageId":"113","endLine":25,"endColumn":27},{"ruleId":"110","severity":1,"message":"130","line":35,"column":9,"nodeType":"112","messageId":"113","endLine":35,"endColumn":22},{"ruleId":"110","severity":1,"message":"131","line":1,"column":10,"nodeType":"132","messageId":"113","endLine":1,"endColumn":15},{"ruleId":"110","severity":1,"message":"131","line":1,"column":10,"nodeType":"132","messageId":"113","endLine":1,"endColumn":15},{"ruleId":"114","severity":1,"message":"133","line":31,"column":6,"nodeType":"116","endLine":31,"endColumn":11,"suggestions":"134"},{"ruleId":"110","severity":1,"message":"118","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"135","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":84,"column":11,"nodeType":"138","messageId":"139","endLine":84,"endColumn":22},{"ruleId":"110","severity":1,"message":"140","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"141","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":14},{"ruleId":"110","severity":1,"message":"131","line":1,"column":10,"nodeType":"132","messageId":"113","endLine":1,"endColumn":15},{"ruleId":"114","severity":1,"message":"142","line":138,"column":6,"nodeType":"116","endLine":138,"endColumn":11,"suggestions":"143"},{"ruleId":"110","severity":1,"message":"140","line":1,"column":28,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"144","line":15,"column":9,"nodeType":"112","messageId":"113","endLine":15,"endColumn":17},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'SignUpModal' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'modal' is assigned a value but never used.","'signBtn' is assigned a value but never used.","'findBtn' is assigned a value but never used.","'KakaoMapCurrent' is defined but never used.","'menuModal' is defined but never used.","'kakao' is assigned a value but never used.","'curDeg' is assigned a value but never used.","'isSearch' is assigned a value but never used.","'attend' is assigned a value but never used.","'setAttend' is assigned a value but never used.","'searchInputOn' is assigned a value but never used.","'kakao' is defined but never used.","Program","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["148"],"'userInfo' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'curAdd', 'inputAdd', and 'setMyCurAdd'. Either include them or remove the dependency array. If 'setMyCurAdd' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["149"],"'findInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [isAuthenticated]",{"range":"156","text":"157"},"Update the dependencies array to be: [add, userInfo]",{"range":"158","text":"159"},"Update the dependencies array to be: [add, curAdd, inputAdd, setMyCurAdd]",{"range":"160","text":"161"},[1246,1248],"[isAuthenticated]",[612,617],"[add, userInfo]",[3918,3923],"[add, curAdd, inputAdd, setMyCurAdd]"]