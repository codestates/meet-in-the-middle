[{"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/index.js":"1","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/App.js":"2","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Login.js":"3","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MapPage.js":"4","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/dummydata.js":"5","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/KakaoMap.js":"6","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Meet.js":"7","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MyProfileModal.js":"8","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/test.js":"9","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/plusFriendModal.js":"10","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/dummy.js":"11","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/SignUpModal.js":"12","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/mapDiv.js":"13","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/ListUpMapDiv.js":"14","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/FindInfo.js":"15","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/menuModal.js":"16"},{"size":242,"mtime":1637282316418,"results":"17","hashOfConfig":"18"},{"size":1621,"mtime":1637282316417,"results":"19","hashOfConfig":"18"},{"size":4418,"mtime":1637282316420,"results":"20","hashOfConfig":"18"},{"size":6867,"mtime":1637282316420,"results":"21","hashOfConfig":"18"},{"size":752,"mtime":1637229182154,"results":"22","hashOfConfig":"18"},{"size":11102,"mtime":1637229453675,"results":"23","hashOfConfig":"18"},{"size":660,"mtime":1637229182153,"results":"24","hashOfConfig":"18"},{"size":3329,"mtime":1637282316421,"results":"25","hashOfConfig":"18"},{"size":2361,"mtime":1637282316426,"results":"26","hashOfConfig":"18"},{"size":701,"mtime":1637282316424,"results":"27","hashOfConfig":"18"},{"size":7951,"mtime":1637282316418,"results":"28","hashOfConfig":"18"},{"size":3197,"mtime":1637282316422,"results":"29","hashOfConfig":"18"},{"size":4803,"mtime":1637282316424,"results":"30","hashOfConfig":"18"},{"size":4465,"mtime":1637282316420,"results":"31","hashOfConfig":"18"},{"size":1456,"mtime":1637282316419,"results":"32","hashOfConfig":"18"},{"size":970,"mtime":1637282316424,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"adueu0",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/index.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/App.js",["75","76"],"import React, { useState, useEffect } from \"react\";\nimport Login from \"./pages/Login\";\nimport MapPage from \"./pages/MapPage\";\nimport SignUpModal from \"./pages/SignUpModal\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport logo from \"./logo-1.svg\";\nexport default function App() {\n  const [islogin, setislogin] = useState(false);\n  const [userinfo, setuserinfo] = useState(null);\n  const navigate = useNavigate();\n\n  const isAuthenticated = () => {\n    axios\n      .get(\"https://localhost:4000/auth\")\n      .then((res) => {\n        //console.log(res.data.data.needInfo);\n        setislogin(true);\n        setuserinfo(res.data.data.needInfo);\n        navigate(\"/map\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const loginSuccess = () => {\n    isAuthenticated();\n  };\n\n  // const handleSignout = () => {\n  //   axios\n  //     .post(\"https://localhost:4000/signout\")\n  //     .then((res) => {\n  //       setislogin(false);\n  //       setuserinfo(null);\n  //       console.log(res);\n  //       navigate(\"/\");\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  useEffect(() => {\n    isAuthenticated();\n  }, []);\n\n  return (\n    <div>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Login logo={logo} islogin={islogin} loginSuccess={loginSuccess} />\n          }\n        ></Route>\n        <Route\n          exact\n          path=\"/map\"\n          element={<MapPage logo={logo} userinfo={userinfo} />}\n        ></Route>\n      </Routes>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Login.js",["77","78","79","80","81"],"import React, { useState, useEffect, useRef } from \"react\";\nimport SignUpModal from \"./SignUpModal\";\nimport FindInfo from \"./FindInfo\";\nimport axios from \"axios\";\n\naxios.defaults.withCredentials = true;\n\nexport default function Login({ logo, loginSuccess }) {\n  const modal = document.getElementsByClassName(\"modal\");\n  const signBtn = document.getElementById(\"sign-btn\");\n  const findBtn = document.getElementById(\"find-btn\");\n  // 모달 관련 useState\n  const [isOpen, setOpen] = useState(false);\n  const [isOpenFind, setOpenFind] = useState(false);\n\n  const signUpModalOpen = () => {\n    setOpen(true);\n  };\n\n  const findModalOpen = () => {\n    setOpenFind(true);\n    console.log(isOpenFind);\n  };\n\n  const ModalOff = () => {\n    setOpen(false);\n    setOpenFind(false);\n  };\n\n  // 로그인 통신\n  const [logininfo, setlogininfo] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const inputValue = (key) => (e) => {\n    setlogininfo({ ...logininfo, [key]: e.target.value });\n  };\n\n  const handleSignin = () => {\n    const login = { email: logininfo.email, password: logininfo.password };\n    //console.log(login);\n\n    if (!login.email || !login.password) {\n      alert(\"이메일과 비밀번호를 입력하세요\");\n    }\n    axios\n      .post(\"https://localhost:4000/signin\", login, {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      })\n      .then((res) => {\n        //console.log(res);\n        loginSuccess(res);\n      });\n  };\n\n  // window.onclick = function (event) {\n  //   if (event.target !== modal[0] && isOpen && event.target !== signBtn) {\n  //     ModalOff();\n  //   }\n  // };\n\n  return (\n    <div>\n      <center>\n        <form onSubmit={(e) => e.preventDefault()}>\n          <body className=\"inner-container\">\n            <section className=\"identity\">\n              {/* <h1>로고 및 소개 영역</h1> */}\n              <div className=\"intro-area\">\n                <div className=\"container\">\n                  <img src={logo} alt=\"logo\" id=\"logo-login\" />\n                  <img\n                    className=\"introduction\"\n                    src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa28ae486-c85a-4ee0-830a-0664a564da35%2Fintro1.png?table=block&id=d819f83b-cf9f-4c21-9de3-505e52b85e41&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n                    alt=\"intro\"\n                  />\n                </div>\n              </div>\n            </section>\n            <section className=\"inputArea\">\n              {/* <h1>입력 영역</h1> */}\n              <div className=\"input-container\">\n                <img\n                  className=\"welcome\"\n                  src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd24a9efc-85b5-4fd9-bc10-b970598faaf7%2Fwelcome.png?table=block&id=55d6901b-6ddc-466a-acb2-0e482f6e9248&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n                  alt=\"backImg\"\n                ></img>\n                <input\n                  className=\"page1\"\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  onfocus=\"this.placeholder=''\"\n                  onblur=\"this.placeholder = 'email'\"\n                />\n                <input\n                  className=\"page1\"\n                  type=\"password\"\n                  placeholder=\"password\"\n                  onChange={inputValue(\"password\")}\n                  onfocus=\"this.placeholder=''\"\n                  onblur=\"this.placeholder = 'password'\"\n                />\n                <button className=\"page1 button\" onClick={handleSignin}>\n                  LOGIN\n                </button>\n\n                <button\n                  className=\"page1 button\"\n                  id=\"sign-btn\"\n                  onClick={signUpModalOpen}\n                >\n                  SIGN UP\n                </button>\n                <div id=\"find-Btn\" onClick={findModalOpen}>\n                  아이디 / 비밀번호 찾기\n                </div>\n              </div>\n            </section>\n          </body>\n        </form>\n        {isOpen ? <SignUpModal signUpModalOff={ModalOff} /> : null}\n        {isOpenFind ? <FindInfo findModalOff={ModalOff} /> : null}\n      </center>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MapPage.js",["82","83","84","85","86","87","88","89","90"],"import React, { useState, useEffect } from \"react\";\nimport MyProfileModal from \"./MyProfileModal\";\nimport MapDiv from \"./mapDiv\";\nimport PlusFriend from \"./plusFriendModal\";\nimport KakaoMapCurrent from \"./test\";\nimport userInfo from \"../dummy\";\nimport ListUpMapDiv from \"./ListUpMapDiv\";\nimport menuModal from \"./menuModal\";\nconst { kakao } = window;\n\n//axios.defaults.withCredentials = true;\n\nexport default function MapPage({ logo, userinfo }) {\n  //console.log(props);\n  let curDeg = [37.365264512305174, 127.10676860117488];\n  const [curAdd, setCurAdd] = useState(\"\");\n  const [isOpenMyProfile, setOpenMyProfile] = useState(false);\n  const [isSearch, setIsSearch] = useState(false);\n  const [address, setAddress] = useState(\"\");\n  const [onPlus, setOnPlus] = useState(false);\n  const [friendList, setfriendList] = useState([]);\n  const [myCurAdd, setMyCurAdd] = useState([]);\n  const [meetOn, setMeetOn] = useState(false);\n\n  const [attend, setAttend] = useState([]);\n\n  // const [test, setTest] = useState(false);\n\n  friendList.map((e) => console.log(e));\n\n  // const testBtn = () => {\n  //   setTest(true);\n  // };\n\n  const searchInputOn = () => {\n    setIsSearch(true);\n  };\n\n  const searchBtnOn = () => {\n    setCurAdd(address);\n  };\n\n  const inputAdd = (e) => {\n    setAddress(e.target.value);\n  };\n\n  const myProfileModalOpen = () => {\n    setOpenMyProfile(true);\n  };\n\n  const myProfileModalOff = () => {\n    setOpenMyProfile(false);\n  };\n\n  const plusBtnOn = () => {\n    setOnPlus(true);\n    setOpenMyProfile(false);\n  };\n\n  const plusBtnOff = () => {\n    setOnPlus(false);\n  };\n\n  const meetBtnOn = () => {\n    setMeetOn(true);\n  };\n\n  const meetBtnOff = () => {\n    setMeetOn(false);\n  };\n\n  const togle = (e) => {\n    console.log(e);\n  };\n\n  return (\n    <div className=\"main\">\n      {/* <button onClick={testBtn}>주소 불러오기</button> */}\n      <section className=\"top\">\n        <div className=\"logo\" id=\"mapPage-png\">\n          <img\n            id=\"top-bar-icon\"\n            src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F4faf4b54-71c2-426b-9c2d-32af8d906228%2Ficon.png?table=block&id=2fcd1510-28b2-45c9-b3f5-3a28d70dcf40&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n            alt=\"icon\n          \"\n          />\n        </div>\n        <div id=\"top-bar\">\n          {\" \"}\n          <img\n            id=\"top-bar-horiz\"\n            src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fc6d83dd2-fc90-4a4e-8862-4e01888c4213%2Fhorizon-logo.png?table=block&id=4d9e8394-e262-404f-8d02-47db9e43fee8&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n            alt=\"horiz\n          \"\n          />\n        </div>\n        <div id=\"logOutBtn\">Log out</div>\n        <img\n          id=\"top-bar-my\"\n          onClick={myProfileModalOpen}\n          src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fbd6dba21-ec32-47e2-8070-d49a7d0b7edf%2Ficon.png?table=block&id=90af43aa-02f0-40cb-9a42-47cceda1d49a&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n          alt=\"myPage\n          \"\n        />\n      </section>\n      {/* <menuModal /> */}\n      {isOpenMyProfile ? (\n        <MyProfileModal myProfileModalOff={myProfileModalOff} />\n      ) : null}\n      {onPlus ? (\n        <PlusFriend\n          plusBtnOff={plusBtnOff}\n          friendList={friendList}\n          setfriendList={setfriendList}\n        />\n      ) : null}\n\n      <body className=\"inner\">\n        <div className=\"side\">\n          <div id=\"searchDiv\">\n            <input\n              type=\"text\"\n              id=\"searchInput\"\n              onChange={(e) => inputAdd(e)}\n              placeholder=\"주소 검색\"\n            />\n            <div id=\"searchBtnDiv\">\n              <img\n                id=\"searchBtn\"\n                src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fa923dcd3-8f28-4976-a20a-ce78bea2a696%2FsearchBtn.png?table=block&id=0ee8122c-4005-42aa-8370-720b49bb63f5&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n                alt=\"searchBtn\"\n                onClick={searchBtnOn}\n              />\n            </div>\n          </div>\n          <ul>\n            {userInfo.map((e) => (\n              <li>\n                <div className=\"friendListDiv\">\n                  <img src={e.image} className=\"profileImg\" alt=\"\" />\n                  <div className=\"freindDIv\">{e.username}</div>\n                  <div className=\"sliceDiv\">\n                    <label class=\"switch\">\n                      <input type=\"checkbox\" onClick={togle(e)} />\n                      <span class=\"slider round\"></span>\n                    </label>\n                  </div>\n                </div>\n              </li>\n            ))}\n            <div className=\"friendListDiv\" onClick={plusBtnOn}>\n              <img\n                id=\"plusBtn\"\n                src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F89fa1eb6-4e67-4ce8-8779-fd07c83ec002%2FplusBtn.png?table=block&id=279a2423-759b-4997-9c10-4ed7a2d5d71a&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n                alt=\"plusBtn\"\n              />\n              <div className=\"plusMsg\">친구 추가</div>\n            </div>\n          </ul>\n          <div className=\"meetBtnDiv\" onClick={meetBtnOn}>\n            <img\n              className=\"letsMeetBtn\"\n              src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F5214f122-f39c-414f-8791-19a013a0b3bb%2Flets-blue1.png?table=block&id=37426a87-2085-479c-8678-243e37dddcdf&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\"\n              alt=\"letsMeet\"\n            />\n          </div>\n          <div id=\"reMeetBtn\" onClick={meetBtnOff}>\n            - Re Meet -\n          </div>\n        </div>\n        <div className=\"map\">\n          {/* {isOpenMyProfile ? (\n            <MyProfileModal myProfileModalOff={myProfileModalOff} />\n          ) : null} */}\n          <div>\n            {meetOn ? (\n              <ListUpMapDiv\n                myCurAdd={myCurAdd}\n                setMyCurAdd={setMyCurAdd}\n                userInfo={userInfo}\n              />\n            ) : (\n              <MapDiv\n                curAdd={curAdd}\n                myCurAdd={myCurAdd}\n                setMyCurAdd={setMyCurAdd}\n              />\n            )}\n          </div>\n        </div>\n      </body>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/dummydata.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/KakaoMap.js",["91"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Meet.js",["92","93"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MyProfileModal.js",["94","95","96"],"import React, { useEffect, useState } from \"react\";\nimport userInfo from \"../dummy.js\";\nimport axios from \"axios\";\n\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\naxios.defaults.withCredentials = true;\n\nexport default function MyProfileModal({ myProfileModalOff }) {\n  const [findInfo, setfindInfo] = useState({\n    id: \"\",\n    image: \"\",\n    email: \"\",\n    userName: \"\",\n    nickName: \"\",\n    password: \"\",\n    phone: \"\",\n  });\n\n  const [changeInfo, setchangeInfo] = useState({\n    id: \"\",\n    nickName: \"\",\n    password: \"\",\n    phone: \"\",\n  });\n\n  const myInfo = async () => {\n    await axios.get(\"https://localhost:4000/auth\").then((res) => {\n      setfindInfo(res.data.data.needInfo);\n      //console.log(findInfo);\n    });\n  };\n\n  const inputValue = (key) => (e) => {\n    setchangeInfo({ ...changeInfo, [key]: e.target.value });\n  };\n\n  const handleChangeinfo = () => {\n    for (let prop in changeInfo) {\n      if (changeInfo[prop] === \"\") {\n        changeInfo[prop] = findInfo[prop];\n      }\n    }\n    console.log(changeInfo);\n    axios.post(\"https://localhost:4000/userinfo\", changeInfo, {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    });\n  };\n\n  const handlewithdrawal = () => {\n    //console.log(findInfo);\n    axios.post(\"https://localhost:4000/signwithdrawal\", findInfo, {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    });\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"close-btn\" onClick={myProfileModalOff}>\n        X\n      </div>\n\n      <h3 onClick={myInfo}>회원 정보</h3>\n      <div id=\"myPhotoDiv\">\n        <img\n          id=\"profile-img\"\n          src=\"https://pbs.twimg.com/profile_images/549171896013438979/rqtU6Cvn_400x400.png\"\n          alt=\"profile-img\"\n          onChange={inputValue(\"image\")}\n        />\n      </div>\n      <fieldset>\n        <span>이름: {findInfo.userName}</span>\n      </fieldset>\n      <fieldset>\n        <span>이메일: {findInfo.email}</span>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"info-modal-list\"\n          type=\"number\"\n          type=\"text\"\n          placeholder={findInfo.nickName}\n          onChange={inputValue(\"nickName\")}\n        ></input>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"info-modal-list\"\n          type=\"password\"\n          placeholder=\"password\"\n          onChange={inputValue(\"password\")}\n        ></input>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"info-modal-list\"\n          type=\"password\"\n          placeholder=\"password confirm\"\n        ></input>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"info-modal-list\"\n          type=\"number\"\n          placeholder={findInfo.phone}\n          onChange={inputValue(\"phone\")}\n        ></input>\n      </fieldset>\n      <button className=\"modal-btn\" onClick={handleChangeinfo}>\n        회원정보 수정\n      </button>\n      <div id=\"myinfo-btn2\">\n        {/* <span className=\"myinfo-btn\" onClick={() => this.handleSignout}>\n          <a href={\"/\"}>로그아웃</a>\n        </span> */}\n        <span> / </span>\n        <span className=\"myinfo-btn\" onClick={handlewithdrawal}>\n          <a href={\"/\"}>회원탈퇴</a>\n        </span>\n      </div>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/test.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/plusFriendModal.js",["97"],"import React, { useState } from \"react\";\n//! import axios from \"axios\";\n\nexport default function PlusFriend({ plusBtnOff, friendList, setfriendList }) {\n  return (\n    <div className=\"modal\">\n      <div className=\"close-btn\" onClick={plusBtnOff}>\n        X\n      </div>\n      <form onSubmit={(e) => e.preventDefault()}>\n        <fieldset>\n          <input className=\"modal-list\" type=\"text\" placeholder=\"Name\"></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"number\"\n            placeholder=\"Phone\"\n          ></input>\n        </fieldset>\n        <button className=\"modal-btn\">친구 추가</button>\n      </form>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/dummy.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/SignUpModal.js",["98"],"import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\naxios.defaults.withCredentials = true;\n\nexport default function SignUpModal({ signUpModalOff }) {\n  const [userinfo, setuserinfo] = useState({\n    email: \"\",\n    password: \"\",\n    passwordCheck: \"\",\n    userName: \"\",\n    nickName: \"\",\n    birth: \"\",\n    phone: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const inputValue = (key) => (e) => {\n    setuserinfo({ ...userinfo, [key]: e.target.value });\n  };\n\n  const handleSignup = () => {\n    const user = {\n      email: userinfo.email,\n      password: userinfo.password,\n      userName: userinfo.userName,\n      nickName: userinfo.nickName,\n      birth: userinfo.birth,\n      phone: userinfo.phone,\n    };\n\n    if (\n      !user.email ||\n      !user.password ||\n      !user.userName ||\n      !user.nickName ||\n      !user.birth ||\n      !user.phone\n    ) {\n      alert(\"모든 항목은 필수입니다\");\n    }\n    //console.log(user.email);\n    axios\n      .post(\"https://localhost:4000/signup\", user, {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      })\n      .then((res) => {\n        if (res.payload.success) {\n          navigate(\"/\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div>\n      <div className=\"modal\" id=\"signUpModal\">\n        <div className=\"close-btn\" onClick={signUpModalOff}> x </div>\n        <h3 className=\"singup-btn\">SING UP</h3>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"text\"\n            placeholder=\"Email\"\n            onChange={inputValue(\"email\")}\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"password\"\n            placeholder=\"password\"\n            onChange={inputValue(\"password\")}\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"password\"\n            placeholder=\"password confirm\"\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"text\"\n            placeholder=\"Name\"\n            onChange={inputValue(\"userName\")}\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"text\"\n            placeholder=\"Nick name\"\n            onChange={inputValue(\"nickName\")}\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"text\"\n            placeholder=\"Birth\"\n            onChange={inputValue(\"birth\")}\n          ></input>\n        </fieldset>\n        <fieldset>\n          <input\n            className=\"modal-list\"\n            type=\"text\"\n            placeholder=\"Phone\"\n            onChange={inputValue(\"phone\")}\n          ></input>\n        </fieldset>\n        <button className=\"modal-btn\" onClick={handleSignup}>\n          가입하기\n        </button>\n      </div>\n    </div>\n  );\n}","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/mapDiv.js",["99","100"],"/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nconst { kakao } = window;\n//! import axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\n//더미 데이터만 완성해서 보여주기 , 서버 연결해서 보여주기\n\nexport default function MapDiv({ curAdd, myCurAdd, setMyCurAdd }) {\n  const [inputAdd, setInputAdd] = useState([37.541, 126.986]);\n  let add = curAdd ? curAdd : null;\n\n  useEffect(() => {\n    let markers = [];\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setInputAdd([position.coords.latitude, position.coords.longitude]);\n        // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n      });\n    }\n\n    var imageSrc =\n        \"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd1f712bb-571c-4481-b014-9fefb0995da2%2Fstart.png?table=block&id=f06f9cb2-93ca-4300-8bf1-df74e97ba9f8&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\", // 마커이미지의 주소입니다\n      imageSize = new kakao.maps.Size(64, 69), // 마커이미지의 크기입니다\n      imageOption = { offset: new kakao.maps.Point(27, 69) };\n\n    var markerImage = new kakao.maps.MarkerImage(\n      imageSrc,\n      imageSize,\n      imageOption\n    );\n\n    // console.log(inputAdd);\n    setMyCurAdd([inputAdd[0], inputAdd[1]]);\n\n    var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n      mapOption = {\n        center: new kakao.maps.LatLng(inputAdd[0], inputAdd[1]), // 지도의 중심좌표\n        level: 10, // 지도의 확대 레벨\n      };\n\n    // 지도를 생성합니다\n    var map = new kakao.maps.Map(mapContainer, mapOption);\n\n    // 주소-좌표 변환 객체를 생성합니다\n    var geocoder = new kakao.maps.services.Geocoder();\n\n    if (add) {\n      console.log(curAdd);\n\n      geocoder.addressSearch(add, function (result, status) {\n        // 정상적으로 검색이 완료됐으면\n        if (status === kakao.maps.services.Status.OK) {\n          var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n          setMyCurAdd([result[0].y, result[0].x]);\n          var markerPosition = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n          // 결과값으로 받은 위치를 마커로 표시합니다\n          var marker = new kakao.maps.Marker({\n            map: map,\n            position: markerPosition,\n            image: markerImage,\n          });\n          markers.push(marker);\n          map.setCenter(coords);\n        }\n      });\n    } else {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        const lat = position.coords.latitude, // 위도\n          lon = position.coords.longitude; // 경도\n\n        setMyCurAdd([lat, lon]);\n\n        var imageSrc =\n            \"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fd1f712bb-571c-4481-b014-9fefb0995da2%2Fstart.png?table=block&id=f06f9cb2-93ca-4300-8bf1-df74e97ba9f8&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\", // 마커이미지의 주소입니다\n          imageSize = new kakao.maps.Size(64, 69), // 마커이미지의 크기입니다\n          imageOption = { offset: new kakao.maps.Point(27, 69) };\n\n        var markerImage = new kakao.maps.MarkerImage(\n            imageSrc,\n            imageSize,\n            imageOption\n          ),\n          markerPosition = new kakao.maps.LatLng(lat, lon);\n\n        var marker = new kakao.maps.Marker({\n          map: map,\n          position: markerPosition,\n          image: markerImage,\n        });\n        markers.push(marker);\n        const locPosition = new kakao.maps.LatLng(lat, lon); // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n\n        // 마커와 인포윈도우를 표시합니다\n        displayMarker(locPosition);\n      });\n\n      function displayMarker(locPosition, message) {\n        map.setCenter(locPosition);\n      }\n    }\n\n    console.log(markers);\n\n    // 지도에 마커를 표시합니다\n    kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n      // 클릭한 위도, 경도 정보를 가져옵니다\n      var latlng = mouseEvent.latLng;\n\n      for (let i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n\n      console.log(markers);\n\n      var marker = new kakao.maps.Marker({\n        position: latlng,\n        image: markerImage,\n      });\n\n      markers.push(marker);\n      // 마커 위치를 클릭한 위치로 옮깁니다\n      marker.setMap(map);\n    });\n  }, [add]);\n\n  return <div id=\"map\"></div>;\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/ListUpMapDiv.js",["101","102","103"],"import React, { useEffect, useState } from \"react\";\nconst { kakao } = window;\n//! import axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\n//더미 데이터만 완성해서 보여주기 , 서버 연결해서 보여주기\n\nexport default function MapDiv({ myCurAdd, setMyCurAdd, userInfo }) {\n  let points = [];\n\n  userInfo.forEach((e) => points.push([e.lat, e.lng]));\n\n  const getCentroid = (points) => {\n    const count = points.length;\n    const centerLat = points.reduce((p, c) => p + c[0], 0) / count;\n    const centerLon = points.reduce((p, c) => p + c[1], 0) / count;\n    return {\n      x: centerLat,\n      y: centerLon,\n    };\n  };\n\n  let center = getCentroid(points);\n\n  useEffect(() => {\n    var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n      mapOption = {\n        center: new kakao.maps.LatLng(myCurAdd[0], myCurAdd[1]), // 지도의 중심좌표\n        level: 9, // 지도의 확대 레벨\n      };\n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n    var positions = [];\n\n    userInfo.forEach((e) => {\n      positions.push({\n        title: `${e.username}`,\n        latlng: new kakao.maps.LatLng(Number(e.lat), Number(e.lng)),\n        image: e.image,\n      });\n    });\n\n    //* 중심좌표 렌더부분\n    var centerPint = new kakao.maps.LatLng(center.x, center.y);\n\n    var circle = new kakao.maps.Circle({\n      center: centerPint, // 원의 중심좌표 입니다\n      radius: 1000, // 미터 단위의 원의 반지름입니다\n      strokeWeight: 5, // 선의 두께입니다\n      strokeColor: \"#75B8FA\", // 선의 색깔입니다\n      strokeOpacity: 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\n      strokeStyle: \"dashed\", // 선의 스타일 입니다\n      fillColor: \"#CFE7FF\", // 채우기 색깔입니다\n      fillOpacity: 0.8, // 채우기 불투명도 입니다\n    });\n\n    // var circleMarker = new kakao.maps.Marker({\n    //   position: centerPint, // 마커를 표시할 위치\n    // });\n\n    circle.setMap(map);\n\n    var middleContent = `<div style=\"margin-right:10em\"><img style=\"width:8em; margin-top: 0.1em; margin-rigth:20em; margin-bottom:2em\" src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F229217dc-0928-4f3f-b147-1439fb80234a%2Fmeet.png?table=block&id=e1a97111-770d-47f0-9bfd-d6d48c997c41&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\" /><div /></div>`;\n\n    // 커스텀 오버레이를 생성합니다\n    var customOverlay = new kakao.maps.CustomOverlay({\n      map: map,\n      position: centerPint,\n      content: middleContent,\n      yAnchor: 1,\n    });\n\n    for (var i = 0; i < positions.length; i++) {\n      // var content = `<div class =\"label\" style=\"color: #484d8b; background-color: white; padding: 2px; border: 2px solid rgb(255, 217, 0); border-radius: 30px; font-size: 15px; line-height: 1.8em; width: 4em; text-align: center;margin: auto;\"><span class=\"left\"></span><span class=\"center\">${positions[i].title}</span><span class=\"right\"></span></div><img style=\"width:2em; margin-top: 0.3em; margin-left: 0.9em\" src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F9a12b333-7290-40f8-94f8-5a5cf0be6a58%2FfreindsMark.png?table=block&id=b61435fb-5ba1-4612-9e08-ec31098aa049&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\" />`;\n      var content = `<div style=\"margin:auto\"><span class=\"left\"><img style=\"width:3em; border-radius: 3em; border: 2px solid rgb(255, 217, 0);\" src=\"${positions[i].image}\"><span class=\"right\"></span></div><img style=\"width:2em; margin-top: 0.1em;margin-left:0.5em\" src=\"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F9a12b333-7290-40f8-94f8-5a5cf0be6a58%2FfreindsMark.png?table=block&id=b61435fb-5ba1-4612-9e08-ec31098aa049&spaceId=34b2f1fd-9d82-4494-8402-1bb057b304db&width=2000&userId=b5cfa95d-0fdc-4653-8882-18e28aaae8e9&cache=v2\" /></div>`;\n      // 마커를 생성합니다\n      var marker = new kakao.maps.CustomOverlay({\n        map: map,\n        position: positions[i].latlng, // 마커를 표시할 위치\n        content,\n      });\n    }\n\n    map.setCenter(centerPint);\n  });\n\n  return <div id=\"map\"></div>;\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/FindInfo.js",["104"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function FindInfo({ findModalOff }) {\n  const [userinfo, setuserinfo] = useState({\n    userName: \"\",\n    birth: \"\",\n    phone: \"\",\n  });\n\n  const inputValue = (key) => (e) => {\n    setuserinfo({ ...userinfo, [key]: e.target.value });\n  };\n\n  const findInfo = () => {\n    const user = {\n      userName: userinfo.userName,\n      birth: userinfo.birth,\n      phone: userinfo.phone,\n    };\n\n    if (!user.userName || !user.birth || !user.phone) {\n      alert(\"모든 항목은 필수입니다\");\n    }\n    axios\n      .post(\"https://localhost:4000/findlongininfo\", user, {\n        headers: { \"Content-Type\": \"application/json\" },\n        withCredentials: true,\n      })\n      .then((res) => {\n        console.log(res);\n      });\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"close-btn\" onClick={findModalOff}>\n        X\n      </div>\n      <fieldset>\n        <input className=\"modal-list\" type=\"text\" placeholder=\"Name\"></input>\n      </fieldset>\n      <fieldset>\n        <input className=\"modal-list\" type=\"number\" placeholder=\"Phone\"></input>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"modal-list\"\n          type=\"text\"\n          placeholder=\"Birth day\"\n          onChange={inputValue(\"birth\")}\n        ></input>\n      </fieldset>\n      <button className=\"modal-btn\">아이디 / 비밀번호 찾기</button>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/menuModal.js",[],{"ruleId":"105","severity":1,"message":"106","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":48,"column":6,"nodeType":"111","endLine":48,"endColumn":8,"suggestions":"112"},{"ruleId":"105","severity":1,"message":"113","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"114","line":1,"column":38,"nodeType":"107","messageId":"108","endLine":1,"endColumn":44},{"ruleId":"105","severity":1,"message":"115","line":9,"column":9,"nodeType":"107","messageId":"108","endLine":9,"endColumn":14},{"ruleId":"105","severity":1,"message":"116","line":10,"column":9,"nodeType":"107","messageId":"108","endLine":10,"endColumn":16},{"ruleId":"105","severity":1,"message":"117","line":11,"column":9,"nodeType":"107","messageId":"108","endLine":11,"endColumn":16},{"ruleId":"105","severity":1,"message":"113","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"118","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":23},{"ruleId":"105","severity":1,"message":"119","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":17},{"ruleId":"105","severity":1,"message":"120","line":9,"column":9,"nodeType":"107","messageId":"108","endLine":9,"endColumn":14},{"ruleId":"105","severity":1,"message":"121","line":15,"column":7,"nodeType":"107","messageId":"108","endLine":15,"endColumn":13},{"ruleId":"105","severity":1,"message":"122","line":18,"column":10,"nodeType":"107","messageId":"108","endLine":18,"endColumn":18},{"ruleId":"105","severity":1,"message":"123","line":25,"column":10,"nodeType":"107","messageId":"108","endLine":25,"endColumn":16},{"ruleId":"105","severity":1,"message":"124","line":25,"column":18,"nodeType":"107","messageId":"108","endLine":25,"endColumn":27},{"ruleId":"105","severity":1,"message":"125","line":35,"column":9,"nodeType":"107","messageId":"108","endLine":35,"endColumn":22},{"ruleId":"105","severity":1,"message":"126","line":1,"column":10,"nodeType":"127","messageId":"108","endLine":1,"endColumn":15},{"ruleId":"105","severity":1,"message":"126","line":1,"column":10,"nodeType":"127","messageId":"108","endLine":1,"endColumn":15},{"ruleId":"109","severity":1,"message":"128","line":31,"column":6,"nodeType":"111","endLine":31,"endColumn":11,"suggestions":"129"},{"ruleId":"105","severity":1,"message":"113","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"130","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":84,"column":11,"nodeType":"133","messageId":"134","endLine":84,"endColumn":22},{"ruleId":"105","severity":1,"message":"135","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"136","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"126","line":1,"column":10,"nodeType":"127","messageId":"108","endLine":1,"endColumn":15},{"ruleId":"109","severity":1,"message":"137","line":128,"column":6,"nodeType":"111","endLine":128,"endColumn":11,"suggestions":"138"},{"ruleId":"105","severity":1,"message":"135","line":1,"column":28,"nodeType":"107","messageId":"108","endLine":1,"endColumn":36},{"ruleId":"105","severity":1,"message":"139","line":67,"column":9,"nodeType":"107","messageId":"108","endLine":67,"endColumn":22},{"ruleId":"105","severity":1,"message":"140","line":78,"column":11,"nodeType":"107","messageId":"108","endLine":78,"endColumn":17},{"ruleId":"105","severity":1,"message":"141","line":15,"column":9,"nodeType":"107","messageId":"108","endLine":15,"endColumn":17},"no-unused-vars","'SignUpModal' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'modal' is assigned a value but never used.","'signBtn' is assigned a value but never used.","'findBtn' is assigned a value but never used.","'KakaoMapCurrent' is defined but never used.","'menuModal' is defined but never used.","'kakao' is assigned a value but never used.","'curDeg' is assigned a value but never used.","'isSearch' is assigned a value but never used.","'attend' is assigned a value but never used.","'setAttend' is assigned a value but never used.","'searchInputOn' is assigned a value but never used.","'kakao' is defined but never used.","Program","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["143"],"'userInfo' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'curAdd', 'inputAdd', and 'setMyCurAdd'. Either include them or remove the dependency array. If 'setMyCurAdd' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["144"],"'customOverlay' is assigned a value but never used.","'marker' is assigned a value but never used.","'findInfo' is assigned a value but never used.",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [isAuthenticated]",{"range":"151","text":"152"},"Update the dependencies array to be: [add, userInfo]",{"range":"153","text":"154"},"Update the dependencies array to be: [add, curAdd, inputAdd, setMyCurAdd]",{"range":"155","text":"156"},[1246,1248],"[isAuthenticated]",[612,617],"[add, userInfo]",[4231,4236],"[add, curAdd, inputAdd, setMyCurAdd]"]