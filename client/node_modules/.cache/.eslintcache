[{"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/index.js":"1","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/App.js":"2","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Login.js":"3","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MapPage.js":"4","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/dummydata.js":"5","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/KakaoMap.js":"6","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Meet.js":"7","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MyProfileModal.js":"8","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/test.js":"9","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/plusFriendModal.js":"10","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/dummy.js":"11","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/SignUpModal.js":"12","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/mapDiv.js":"13","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/ListUpMapDiv.js":"14","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/FindInfo.js":"15","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/menuModal.js":"16"},{"size":242,"mtime":1636707203472,"results":"17","hashOfConfig":"18"},{"size":1461,"mtime":1637229525486,"results":"19","hashOfConfig":"18"},{"size":4427,"mtime":1637229470598,"results":"20","hashOfConfig":"18"},{"size":6885,"mtime":1637229403951,"results":"21","hashOfConfig":"18"},{"size":752,"mtime":1637229182154,"results":"22","hashOfConfig":"18"},{"size":11102,"mtime":1637229453675,"results":"23","hashOfConfig":"18"},{"size":660,"mtime":1637229182153,"results":"24","hashOfConfig":"18"},{"size":3088,"mtime":1637229267358,"results":"25","hashOfConfig":"18"},{"size":2361,"mtime":1637229267359,"results":"26","hashOfConfig":"18"},{"size":701,"mtime":1637229267359,"results":"27","hashOfConfig":"18"},{"size":7951,"mtime":1637229267357,"results":"28","hashOfConfig":"18"},{"size":2789,"mtime":1637229267358,"results":"29","hashOfConfig":"18"},{"size":4803,"mtime":1637229267359,"results":"30","hashOfConfig":"18"},{"size":4465,"mtime":1637229267358,"results":"31","hashOfConfig":"18"},{"size":1357,"mtime":1637229267358,"results":"32","hashOfConfig":"18"},{"size":970,"mtime":1637229267359,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"adueu0",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/index.js",[],["71","72"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/App.js",["73","74"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Login.js",["75","76","77","78","79","80"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MapPage.js",["81","82","83","84","85","86","87","88","89"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/dummydata.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/KakaoMap.js",["90"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/Meet.js",["91","92"],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/MyProfileModal.js",["93","94"],"\nimport React, { useEffect, useState } from \"react\";\nimport userInfo from \"../dummy.js\";\nimport axios from \"axios\";\n\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\naxios.defaults.withCredentials = true;\n\nexport default function MyProfileModal({ myProfileModalOff }) {\n  const [findInfo, setfindInfo] = useState({\n    id: '',\n    image: '',\n    email: '',\n    userName: '',\n    nickName: '',\n    password: '',\n    phone: ''\n  });\n\n  const [changeInfo, setchangeInfo] = useState({\n    id: '',\n    nickName: '',\n    password: '',\n    phone: ''\n  });\n\n  const myInfo = async () => {\n    await axios.get('https://localhost:4000/auth').then((res) => {\n      setfindInfo(res.data.data.needInfo);\n      //console.log(findInfo);\n    });\n  };\n\n  const inputValue = (key) => (e) => {\n    setchangeInfo({...changeInfo, [key]: e.target.value});\n  };\n  \n  const handleChangeinfo = () => {\n    for(let prop in changeInfo){\n      if(changeInfo[prop] === '') {\n        changeInfo[prop] = findInfo[prop];\n      }\n    }\n    console.log(changeInfo);\n    axios.post('https://localhost:4000/userinfo', changeInfo,\n      {headers: {'Content-Type': 'application/json'}, withCredentials: true}\n    )\n  };\n\n  const handlewithdrawal = () => {\n    //console.log(findInfo);\n    axios.post('https://localhost:4000/signwithdrawal', findInfo,\n      {headers: {'Content-Type': 'application/json'}, withCredentials: true}\n    )\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"close-btn\" onClick={myProfileModalOff}>\n        X\n      </div>\n\n      <h3 onClick={myInfo}>회원 정보</h3>\n      <div id=\"myPhotoDiv\">\n        <img\n          id=\"profile-img\"\n          src=\"https://pbs.twimg.com/profile_images/549171896013438979/rqtU6Cvn_400x400.png\"\n          alt=\"profile-img\"\nonChange={inputValue('image')}\n        />\n      </div>\n      <fieldset>\n        <span>이름: {findInfo.userName}</span>\n      </fieldset>\n      <fieldset>\n        <span>이메일: {findInfo.email}</span>\n      </fieldset>\n      <fieldset>\n        <input className=\"info-modal-list\" type=\"number\" type=\"text\" placeholder={findInfo.nickName} onChange={inputValue('nickName')}></input>\n      </fieldset>\n      <fieldset>\n        <input className=\"info-modal-list\" type=\"password\"  placeholder=\"password\" onChange={inputValue('password')}></input>\n      </fieldset>\n      <fieldset>\n<input className=\"info-modal-list\" type=\"password\"  placeholder=\"password confirm\"></input>\n      </fieldset>\n      <fieldset>\n        <input\n          className=\"info-modal-list\"\n          type=\"number\"\n          type=\"text\"\n          placeholder={findInfo.phone} onChange={inputValue('phone')}\n        ></input>\n      </fieldset>\n      <button className=\"modal-btn\" onClick={handleChangeinfo}>회원정보 수정</button>\n      <div id=\"myinfo-btn2\">\n        <span className=\"myinfo-btn\" onClick={() => this.handleSignout}><a href={'/'}>로그아웃</a></span>\n        <span> / </span>\n        <span className=\"myinfo-btn\" onClick={handlewithdrawal}><a href={'/'}>회원탈퇴</a></span>\n      </div>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/test.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/plusFriendModal.js",["95"],"import React, { useState } from \"react\";\n//! import axios from \"axios\";\n\nexport default function PlusFriend({ plusBtnOff, friendList, setfriendList }) {\n  return (\n    <div className=\"modal\">\n      <div className=\"close-btn\" onClick={plusBtnOff}>X</div>\n      <form onSubmit={(e) => e.preventDefault()}>\n        <fieldset>\n          <input className=\"modal-list\" type=\"text\" placeholder=\"Name\"></input>\n        </fieldset>\n        <fieldset>\n          <input className=\"modal-list\" type=\"number\" placeholder=\"Phone\"></input>\n        </fieldset>\n        <button className=\"modal-btn\">친구 추가</button>\n      </form>\n    </div>\n  );\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/dummy.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/SignUpModal.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/mapDiv.js",["96","97"],"/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nconst { kakao } = window;\n//! import axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\n//더미 데이터만 완성해서 보여주기 , 서버 연결해서 보여주기\n\nexport default function MapDiv({ curAdd, myCurAdd, setMyCurAdd }) {\n  const [inputAdd, setInputAdd] = useState([37.541, 126.986]);\n  let add = curAdd ? curAdd : null;\n\n  //   const selectKeyWord = () => {\n  //     console.log(\"선택\");\n  //   };\n\n  useEffect(() => {\n    let markers = [];\n    let infos = [];\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setInputAdd([position.coords.latitude, position.coords.longitude]);\n        // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n      });\n    }\n\n    // console.log(inputAdd);\n    setMyCurAdd([inputAdd[0], inputAdd[1]]);\n\n    var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n      mapOption = {\n        center: new kakao.maps.LatLng(inputAdd[0], inputAdd[1]), // 지도의 중심좌표\n        level: 10, // 지도의 확대 레벨\n      };\n\n    // 지도를 생성합니다\n    var map = new kakao.maps.Map(mapContainer, mapOption);\n\n    // 주소-좌표 변환 객체를 생성합니다\n    var geocoder = new kakao.maps.services.Geocoder();\n\n    if (add) {\n      console.log(curAdd);\n\n      geocoder.addressSearch(add, function (result, status) {\n        // 정상적으로 검색이 완료됐으면\n        if (status === kakao.maps.services.Status.OK) {\n          var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n          setMyCurAdd([result[0].y, result[0].x]);\n\n          // 결과값으로 받은 위치를 마커로 표시합니다\n          var marker = new kakao.maps.Marker({\n            map: map,\n            position: coords,\n          });\n          markers.push(marker);\n          // 인포윈도우로 장소에 대한 설명을 표시합니다\n          var infowindow = new kakao.maps.InfoWindow({\n            content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${add}</div>`,\n          });\n          infos.push(infowindow);\n          infowindow.open(map, marker);\n\n          // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n          map.setCenter(coords);\n        }\n      });\n    } else {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        const lat = position.coords.latitude, // 위도\n          lon = position.coords.longitude; // 경도\n\n        setMyCurAdd([lat, lon]);\n\n        const locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n          message = '<div style=\"padding:5px;\">현재 위치</div>'; // 인포윈도우에 표시될 내용입니다\n\n        // 마커와 인포윈도우를 표시합니다\n        displayMarker(locPosition, message);\n      });\n\n      function displayMarker(locPosition, message) {\n        // 마커를 생성합니다\n        const marker = new kakao.maps.Marker({\n          map: map,\n          position: locPosition,\n        });\n        markers.push(marker);\n\n        const iwContent = message, // 인포윈도우에 표시할 내용\n          iwRemoveable = true;\n\n        // 인포윈도우를 생성합니다\n        const infowindow = new kakao.maps.InfoWindow({\n          content: iwContent,\n          removable: iwRemoveable,\n        });\n\n        infos.push(infowindow);\n        // 인포윈도우를 마커위에 표시합니다\n        infowindow.open(map, marker);\n\n        // 지도 중심좌표를 접속위치로 변경합니다\n        map.setCenter(locPosition);\n      }\n    }\n\n    // 지도에 마커를 표시합니다\n    kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n      // 클릭한 위도, 경도 정보를 가져옵니다\n      var latlng = mouseEvent.latLng;\n\n      for (let i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n      for (let j = 0; j < infos.length; j++) {\n        infos[j].setMap(null);\n      }\n\n      var marker = new kakao.maps.Marker({\n        position: latlng,\n      });\n\n      const infowindow = new kakao.maps.InfoWindow({\n        content: '<div style=\"padding:5px;\">여기???????</div>',\n      });\n\n      infos.push(infowindow);\n      // 인포윈도우를 마커위에 표시합니다\n      infowindow.open(map, marker);\n\n      markers.push(marker);\n      // 마커 위치를 클릭한 위치로 옮깁니다\n      marker.setMap(map);\n    });\n  }, [add]);\n\n  return <div id=\"map\"></div>;\n}","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/ListUpMapDiv.js",["98"],"import React, { useEffect, useState } from \"react\";\nconst { kakao } = window;\n//! import axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\n//더미 데이터만 완성해서 보여주기 , 서버 연결해서 보여주기\n\nexport default function MapDiv({ myCurAdd, setMyCurAdd, userInfo }) {\n  //* 중심 좌표 로직\n  //   let points = [];\n\n  //   userInfo.forEach((e) => points.push([e.lat, e.lng]));\n\n  //   console.log(points);\n\n  //   function getCentroid(points) {\n  //     var area = 0,\n  //       cx = 0,\n  //       cy = 0;\n\n  //     for (var i = 0; i < points.length; i++) {\n  //       var j = (i + 1) % points.length;\n\n  //       var pt1 = points[i];\n  //       var pt2 = points[j];\n\n  //       var x1 = pt1[0];\n  //       var x2 = pt2[0];\n  //       var y1 = pt1[1];\n  //       var y2 = pt2[1];\n\n  //       area += x1 * y2;\n  //       area -= y1 * x2;\n\n  //       cx += (x1 + x2) * (x1 * y2 - x2 * y1);\n  //       cy += (y1 + y2) * (x1 * y2 - x2 * y1);\n  //     }\n\n  //     area /= 2;\n\n  //     cx = cx / (6.0 * area);\n  //     cy = cy / (6.0 * area);\n\n  //     return {\n  //       x: cx,\n  //       y: cy,\n  //     };\n  //   }\n\n  //   let center = getCentroid(points);\n\n  useEffect(() => {\n    var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n      mapOption = {\n        center: new kakao.maps.LatLng(myCurAdd[0], myCurAdd[1]), // 지도의 중심좌표\n        level: 10, // 지도의 확대 레벨\n      };\n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n    // var positions = [];\n\n    var positions = [\n      {\n        title: \"카카오\",\n        latlng: new kakao.maps.LatLng(33.450705, 126.570677),\n      },\n      {\n        title: \"생태연못\",\n        latlng: new kakao.maps.LatLng(33.450936, 126.569477),\n      },\n      {\n        title: \"텃밭\",\n        latlng: new kakao.maps.LatLng(33.450879, 126.56994),\n      },\n      {\n        title: \"근린공원\",\n        latlng: new kakao.maps.LatLng(33.451393, 126.570738),\n      },\n    ];\n\n    userInfo.forEach((e) => {\n      positions.push({\n        title: `${e.username}`,\n        latlng: new kakao.maps.LatLng(Number(e.lat), Number(e.lng)),\n      });\n    });\n\n    var imageSrc =\n      \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\";\n\n    //* 중심좌표 렌더부분\n    // var centerPint = new kakao.maps.LatLng(center.x, center.y);\n\n    // console.log(center);\n\n    // var centerMarker = new kakao.maps.Marker({\n    //   map: map,\n    //   position: centerPint, // 마커를 표시할 위치\n    // });\n\n    for (var i = 0; i < positions.length; i++) {\n      // 마커 이미지의 이미지 크기 입니다\n\n      //   console.log(positions[i], positions[i].latlng);\n      var imageSize = new kakao.maps.Size(24, 35);\n\n      // 마커 이미지를 생성합니다\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: positions[i].latlng, // 마커를 표시할 위치\n        title: positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n        image: markerImage, // 마커 이미지\n      });\n\n      const infowindow = new kakao.maps.InfoWindow({\n        content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${positions[i].title}</div>`,\n      });\n\n      // 인포윈도우를 마커위에 표시합니다\n      infowindow.open(map, marker);\n    }\n  });\n\n  return <div id=\"map\"></div>;\n}\n","/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/FindInfo.js",[],"/Users/julie/Desktop/code33/meet-in-the-middle/client/src/pages/menuModal.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":19},{"ruleId":"107","severity":1,"message":"108","line":45,"column":6,"nodeType":"109","endLine":45,"endColumn":8,"suggestions":"110"},{"ruleId":"103","severity":1,"message":"111","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"112","line":1,"column":38,"nodeType":"105","messageId":"106","endLine":1,"endColumn":44},{"ruleId":"103","severity":1,"message":"113","line":9,"column":9,"nodeType":"105","messageId":"106","endLine":9,"endColumn":14},{"ruleId":"103","severity":1,"message":"114","line":10,"column":9,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"103","severity":1,"message":"115","line":11,"column":9,"nodeType":"105","messageId":"106","endLine":11,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":94,"column":17,"nodeType":"118","messageId":"119","endLine":95,"endColumn":18},{"ruleId":"103","severity":1,"message":"111","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},{"ruleId":"103","severity":1,"message":"120","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":23},{"ruleId":"103","severity":1,"message":"121","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":17},{"ruleId":"103","severity":1,"message":"122","line":9,"column":9,"nodeType":"105","messageId":"106","endLine":9,"endColumn":14},{"ruleId":"103","severity":1,"message":"123","line":16,"column":7,"nodeType":"105","messageId":"106","endLine":16,"endColumn":13},{"ruleId":"103","severity":1,"message":"124","line":19,"column":10,"nodeType":"105","messageId":"106","endLine":19,"endColumn":18},{"ruleId":"103","severity":1,"message":"125","line":26,"column":10,"nodeType":"105","messageId":"106","endLine":26,"endColumn":16},{"ruleId":"103","severity":1,"message":"126","line":26,"column":18,"nodeType":"105","messageId":"106","endLine":26,"endColumn":27},{"ruleId":"103","severity":1,"message":"127","line":36,"column":9,"nodeType":"105","messageId":"106","endLine":36,"endColumn":22},{"ruleId":"103","severity":1,"message":"128","line":1,"column":10,"nodeType":"129","messageId":"106","endLine":1,"endColumn":15},{"ruleId":"103","severity":1,"message":"128","line":1,"column":10,"nodeType":"129","messageId":"106","endLine":1,"endColumn":15},{"ruleId":"107","severity":1,"message":"130","line":31,"column":6,"nodeType":"109","endLine":31,"endColumn":11,"suggestions":"131"},{"ruleId":"103","severity":1,"message":"132","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"133","severity":1,"message":"134","line":28,"column":58,"nodeType":"135","messageId":"136","endLine":28,"endColumn":69},{"ruleId":"103","severity":1,"message":"137","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"128","line":1,"column":10,"nodeType":"129","messageId":"106","endLine":1,"endColumn":15},{"ruleId":"107","severity":1,"message":"138","line":138,"column":6,"nodeType":"109","endLine":138,"endColumn":11,"suggestions":"139"},{"ruleId":"103","severity":1,"message":"137","line":1,"column":28,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'SignUpModal' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'modal' is assigned a value but never used.","'signBtn' is assigned a value but never used.","'findBtn' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'KakaoMapCurrent' is defined but never used.","'menuModal' is defined but never used.","'kakao' is assigned a value but never used.","'curDeg' is assigned a value but never used.","'isSearch' is assigned a value but never used.","'attend' is assigned a value but never used.","'setAttend' is assigned a value but never used.","'searchInputOn' is assigned a value but never used.","'kakao' is defined but never used.","Program","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["143"],"'userInfo' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'curAdd', 'inputAdd', and 'setMyCurAdd'. Either include them or remove the dependency array. If 'setMyCurAdd' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [isAuthenticated]",{"range":"151","text":"152"},"Update the dependencies array to be: [add, userInfo]",{"range":"153","text":"154"},"Update the dependencies array to be: [add, curAdd, inputAdd, setMyCurAdd]",{"range":"155","text":"156"},[1150,1152],"[isAuthenticated]",[612,617],"[add, userInfo]",[3918,3923],"[add, curAdd, inputAdd, setMyCurAdd]"]