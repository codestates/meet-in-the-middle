[{"/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/index.js":"1","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/App.js":"2","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/MapPage.js":"3","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/Login.js":"4","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/MyProfileModal.js":"5","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/dummy.js":"6","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/test.js":"7","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/plusFriendModal.js":"8","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/mapDiv.js":"9","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/ListUpMapDiv.js":"10","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/FindInfo.js":"11","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/SignUpModal.js":"12"},{"size":242,"mtime":1636707234453,"results":"13","hashOfConfig":"14"},{"size":1462,"mtime":1637216286652,"results":"15","hashOfConfig":"14"},{"size":3596,"mtime":1637196230326,"results":"16","hashOfConfig":"14"},{"size":3338,"mtime":1637195469857,"results":"17","hashOfConfig":"14"},{"size":2867,"mtime":1637227098279,"results":"18","hashOfConfig":"14"},{"size":7951,"mtime":1637110950665,"results":"19","hashOfConfig":"14"},{"size":2361,"mtime":1637110950669,"results":"20","hashOfConfig":"14"},{"size":627,"mtime":1637110950668,"results":"21","hashOfConfig":"14"},{"size":4682,"mtime":1637110950668,"results":"22","hashOfConfig":"14"},{"size":3611,"mtime":1637110950666,"results":"23","hashOfConfig":"14"},{"size":1331,"mtime":1637208467365,"results":"24","hashOfConfig":"14"},{"size":2495,"mtime":1637154223465,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1gn2h45",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/index.js",[],["59","60"],"/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/App.js",["61","62"],"import React, { useState, useEffect } from \"react\";\nimport Login from \"./pages/Login\";\nimport MapPage from \"./pages/MapPage\";\nimport SignUpModal from \"./pages/SignUpModal\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport logo from \"./logo-1.svg\";\n\nexport default function App() {\n  const [islogin, setislogin] = useState(false);\n  const [userinfo, setuserinfo] = useState(null);\n  const navigate = useNavigate();\n\n  const isAuthenticated = () => {\n    axios.get('https://localhost:4000/auth')\n    .then((res) => {\n      //console.log(res.data.data.needInfo);\n      setislogin(true);\n      setuserinfo(res.data.data.needInfo);\n      navigate('/map');\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  };\n\n  const loginSuccess = () => {\n    isAuthenticated();\n  };\n\n  const handleSignout = () => {\n    axios.post('https://localhost:4000/signout').then((res) => {\n      setislogin(false);\n      setuserinfo(null);\n      console.log(res);\n      navigate('/');\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  };\n\n  useEffect(() => {\n    isAuthenticated();\n  }, []);\n\n  return (\n    <div>\n      <Routes>\n        <Route path=\"/\" element={<Login logo={logo} islogin={islogin} loginSuccess={loginSuccess}/>}></Route>\n        <Route exact path=\"/map\" element={<MapPage logo={logo} userinfo={userinfo} handleSignout={handleSignout}/>}></Route>\n      </Routes>\n    </div>\n  );\n}\n","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/MapPage.js",["63","64","65","66"],"import React, { useState, useEffect } from \"react\";\nimport MyProfileModal from \"./MyProfileModal\";\nimport MapDiv from \"./mapDiv\";\nimport PlusFriend from \"./plusFriendModal\";\nimport KakaoMapCurrent from \"./test\";\nimport userInfo from \"../dummy\";\nimport ListUpMapDiv from \"./ListUpMapDiv\";\nconst { kakao } = window;\n//import axios from \"axios\";\n\n//axios.defaults.withCredentials = true;\n\nexport default function MapPage({ logo }) {\n  //console.log(props);\n  let curDeg = [37.365264512305174, 127.10676860117488];\n  const [curAdd, setCurAdd] = useState(\"\");\n  const [isOpenMyProfile, setOpenMyProfile] = useState(false);\n  const [isSearch, setIsSearch] = useState(false);\n  const [address, setAddress] = useState(\"\");\n  const [onPlus, setOnPlus] = useState(false);\n  const [friendList, setfriendList] = useState([]);\n\n  const [myCurAdd, setMyCurAdd] = useState([]);\n\n  const [meetOn, setMeetOn] = useState(false);\n\n  // const [test, setTest] = useState(false);\n\n  friendList.map((e) => console.log(e));\n\n  // const testBtn = () => {\n  //   setTest(true);\n  // };\n\n  const searchInputOn = () => {\n    setIsSearch(true);\n  };\n\n  const searchBtnOn = () => {\n    setCurAdd(address);\n  };\n\n  const inputAdd = (e) => {\n    setAddress(e.target.value);\n  };\n\n  const myProfileModalOpen = () => {\n    setOpenMyProfile(true);\n  };\n\n  const myProfileModalOff = () => {\n    setOpenMyProfile(false);\n  };\n\n  const plusBtnOn = () => {\n    setOnPlus(true);\n    setOpenMyProfile(false);\n  };\n\n  const plusBtnOff = () => {\n    setOnPlus(false);\n  };\n\n  const meetBtnOn = () => {\n    setMeetOn(true);\n  };\n\n  return (\n    <div className=\"main\">\n      {/* <button onClick={testBtn}>주소 불러오기</button> */}\n      <section className=\"top\">\n        <div className=\"logo\" id=\"myProfilelogo\">\n          <img src={logo} alt=\"logo\" />\n        </div>\n        <div id=\"top-bar\">Meet In The Middle</div>\n        <div className=\"button\" id=\"myProfileBtn\" onClick={myProfileModalOpen}>\n          my\n        </div>\n      </section>\n      {onPlus ? (\n        <PlusFriend\n          plusBtnOff={plusBtnOff}\n          friendList={friendList}\n          setfriendList={setfriendList}\n        />\n      ) : null}\n      {isOpenMyProfile ? (\n        <MyProfileModal myProfileModalOff={myProfileModalOff} />\n      ) : null}\n      <body className=\"inner\">\n        <div className=\"side\">\n          <div className=\"myinfo\">내정보</div>\n          {isSearch ? (\n            <div>\n              <input type=\"text\" onChange={(e) => inputAdd(e)} />\n              <button onClick={searchBtnOn}>검색</button>\n            </div>\n          ) : (\n            <button onClick={searchInputOn}>주소 검색</button>\n          )}\n          <ul>\n            {userInfo.map((e) => (\n              <li>\n                <img src={e.image} className=\"profileImg\" alt=\"\" />\n                <span>{e.username}</span>\n              </li>\n            ))}\n          </ul>\n          <button onClick={plusBtnOn}>친구 추가</button>\n          <button>re meet</button>\n          <button onClick={meetBtnOn}>Meet!!!!</button>\n        </div>\n        <div className=\"map\">\n          <div>\n            {/* <div id=\"map\"></div> */}\n            {meetOn ? (\n              <ListUpMapDiv\n                myCurAdd={myCurAdd}\n                setMyCurAdd={setMyCurAdd}\n                userInfo={userInfo}\n              />\n            ) : (\n              <MapDiv\n                curAdd={curAdd}\n                myCurAdd={myCurAdd}\n                setMyCurAdd={setMyCurAdd}\n              />\n            )}\n          </div>\n        </div>\n      </body>\n    </div>\n  );\n}\n","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/Login.js",["67","68","69","70","71"],"import React, { useState, useEffect, useRef } from \"react\";\nimport SignUpModal from \"./SignUpModal\";\nimport FindInfo from \"./FindInfo\";\nimport axios from \"axios\";\n\naxios.defaults.withCredentials = true;\n\nexport default function Login({ logo, loginSuccess }) {\n  const modal = document.getElementsByClassName(\"modal\");\n  const signBtn = document.getElementById(\"sign-btn\");\n  const findBtn = document.getElementById(\"find-btn\");\n  // 모달 관련 useState\n  const [isOpen, setOpen] = useState(false);\n  const [isOpenFind, setOpenFind] = useState(false);\n\n  const signUpModalOpen = () => {\n    setOpen(true);\n  };\n\n  const findModalOpen = () => {\n    setOpenFind(true);\n    console.log(isOpenFind);\n  };\n\n  const ModalOff = () => {\n    setOpen(false);\n    setOpenFind(false);\n  };\n\n  // 로그인 통신\n  const [logininfo, setlogininfo] = useState({\n    email: '',\n    password: ''\n  });\n\n  const inputValue = (key) => (e) => {\n    setlogininfo({...logininfo, [key]: e.target.value});\n  };\n\n  const handleSignin = () => {\n    const login = {email: logininfo.email, password: logininfo.password};\n    //console.log(login);\n\n    if(!login.email || !login.password) {\n      alert('이메일과 비밀번호를 입력하세요');\n    }\n    axios.post('https://localhost:4000/signin', login,\n      {headers: {'Content-Type': 'application/json'}, withCredentials: true}\n    )\n    .then((res) => {\n      //console.log(res);\n      loginSuccess(res);\n    })\n  };\n\n  // window.onclick = function (event) {\n  //   if (event.target !== modal[0] && isOpen && event.target !== signBtn) {\n  //     ModalOff();\n  //   }\n  // };\n\n  return (\n    <div>\n      <center>\n        <form onSubmit={(e) => e.preventDefault()}>\n        <body className=\"inner-container\">\n          <section className=\"identity\">\n            {/* <h1>로고 및 소개 영역</h1> */}\n            <div className=\"intro-area\">\n              <div className=\"container\">\n                <img src={logo} alt=\"logo\" id=\"logo-login\" />\n                <div>우리 가운데서 만나요!</div>\n              </div>\n            </div>\n          </section>\n          <section className=\"inputArea\">\n            {/* <h1>입력 영역</h1> */}\n            <div id=\"input-container\">\n              <h3 className=\"project-name\">Meet in the middle</h3>\n              <input className=\"page1\" type=\"text\" placeholder=\"Email\" onChange={inputValue('email')}/>\n              <input\n                className=\"page1\"\n                type=\"password\"\n                placeholder=\"password\"\n                onChange={inputValue('password')}\n              ></input>\n              <button className=\"page1 button\" onClick={handleSignin}>LOGIN</button>\n              <button\n                className=\"page1 button\"\n                id=\"sign-btn\"\n                onClick={signUpModalOpen}\n              >\n                SIGN UP\n              </button>\n              <div\n                className=\"page1 button\"\n                id=\"find-Btn\"\n                onClick={findModalOpen}\n              >\n                아이디 / 비밀번호 찾기\n              </div>\n            </div>\n          </section>\n        </body>\n        </form>\n        {isOpen ? <SignUpModal signUpModalOff={ModalOff} /> : null}\n        {isOpenFind ? <FindInfo findModalOff={ModalOff} /> : null}\n      </center>\n    </div>\n  );\n}\n","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/MyProfileModal.js",["72","73","74","75"],"/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/dummy.js",[],"/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/test.js",[],"/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/plusFriendModal.js",["76"],"import React, { useState } from \"react\";\n//! import axios from \"axios\";\n\nexport default function PlusFriend({ plusBtnOff, friendList, setfriendList }) {\n  return (\n    <div className=\"modal\">\n      <form onSubmit={(e) => e.preventDefault()}>\n        <fieldset>\n          <span>이름</span>\n          <input type=\"text\"></input>\n        </fieldset>\n        <fieldset>\n          <span>전화번호</span>\n          <input type=\"number\"></input>\n        </fieldset>\n        <div className=\"button\">추가</div>\n        <div className=\"button\" onClick={plusBtnOff}>\n          닫기\n        </div>\n      </form>\n    </div>\n  );\n}\n","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/mapDiv.js",["77","78"],"/*global kakao*/\nimport React, { useEffect, useState } from \"react\";\nconst { kakao } = window;\n//! import axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\n//더미 데이터만 완성해서 보여주기 , 서버 연결해서 보여주기\n\nexport default function MapDiv({ curAdd, myCurAdd, setMyCurAdd }) {\n  const [inputAdd, setInputAdd] = useState([37.541, 126.986]);\n  let add = curAdd ? curAdd : null;\n\n  //   const selectKeyWord = () => {\n  //     console.log(\"선택\");\n  //   };\n\n  useEffect(() => {\n    let markers = [];\n    let infos = [];\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setInputAdd([position.coords.latitude, position.coords.longitude]);\n        // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n      });\n    }\n\n    // console.log(inputAdd);\n    setMyCurAdd([inputAdd[0], inputAdd[1]]);\n\n    var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n      mapOption = {\n        center: new kakao.maps.LatLng(inputAdd[0], inputAdd[1]), // 지도의 중심좌표\n        level: 10, // 지도의 확대 레벨\n      };\n\n    // 지도를 생성합니다\n    var map = new kakao.maps.Map(mapContainer, mapOption);\n\n    // 주소-좌표 변환 객체를 생성합니다\n    var geocoder = new kakao.maps.services.Geocoder();\n\n    if (add) {\n      console.log(curAdd);\n\n      geocoder.addressSearch(add, function (result, status) {\n        // 정상적으로 검색이 완료됐으면\n        if (status === kakao.maps.services.Status.OK) {\n          var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n          setMyCurAdd([result[0].y, result[0].x]);\n\n          // 결과값으로 받은 위치를 마커로 표시합니다\n          var marker = new kakao.maps.Marker({\n            map: map,\n            position: coords,\n          });\n          markers.push(marker);\n          // 인포윈도우로 장소에 대한 설명을 표시합니다\n          var infowindow = new kakao.maps.InfoWindow({\n            content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${add}</div>`,\n          });\n          infos.push(infowindow);\n          infowindow.open(map, marker);\n\n          // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n          map.setCenter(coords);\n        }\n      });\n    } else {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        const lat = position.coords.latitude, // 위도\n          lon = position.coords.longitude; // 경도\n\n        setMyCurAdd([lat, lon]);\n\n        const locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n          message = '<div style=\"padding:5px;\">현재 위치</div>'; // 인포윈도우에 표시될 내용입니다\n\n        // 마커와 인포윈도우를 표시합니다\n        displayMarker(locPosition, message);\n      });\n\n      function displayMarker(locPosition, message) {\n        // 마커를 생성합니다\n        const marker = new kakao.maps.Marker({\n          map: map,\n          position: locPosition,\n        });\n        markers.push(marker);\n\n        const iwContent = message, // 인포윈도우에 표시할 내용\n          iwRemoveable = true;\n\n        // 인포윈도우를 생성합니다\n        const infowindow = new kakao.maps.InfoWindow({\n          content: iwContent,\n          removable: iwRemoveable,\n        });\n\n        infos.push(infowindow);\n        // 인포윈도우를 마커위에 표시합니다\n        infowindow.open(map, marker);\n\n        // 지도 중심좌표를 접속위치로 변경합니다\n        map.setCenter(locPosition);\n      }\n    }\n\n    // 지도에 마커를 표시합니다\n    kakao.maps.event.addListener(map, \"click\", function (mouseEvent) {\n      // 클릭한 위도, 경도 정보를 가져옵니다\n      var latlng = mouseEvent.latLng;\n\n      for (let i = 0; i < markers.length; i++) {\n        markers[i].setMap(null);\n      }\n      for (let j = 0; j < infos.length; j++) {\n        infos[j].setMap(null);\n      }\n\n      var marker = new kakao.maps.Marker({\n        position: latlng,\n      });\n\n      const infowindow = new kakao.maps.InfoWindow({\n        content: '<div style=\"padding:5px;\">여기???????</div>',\n      });\n\n      infos.push(infowindow);\n      // 인포윈도우를 마커위에 표시합니다\n      infowindow.open(map, marker);\n\n      markers.push(marker);\n      // 마커 위치를 클릭한 위치로 옮깁니다\n      marker.setMap(map);\n    });\n  }, [add]);\n\n  return <div id=\"map\"></div>;\n}\n","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/ListUpMapDiv.js",["79"],"import React, { useEffect, useState } from \"react\";\nconst { kakao } = window;\n//! import axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\n//더미 데이터만 완성해서 보여주기 , 서버 연결해서 보여주기\n\nexport default function MapDiv({ myCurAdd, setMyCurAdd, userInfo }) {\n  //* 중심 좌표 로직\n  //   let points = [];\n\n  //   userInfo.forEach((e) => points.push([e.lat, e.lng]));\n\n  //   console.log(points);\n\n  //   function getCentroid(points) {\n  //     var area = 0,\n  //       cx = 0,\n  //       cy = 0;\n\n  //     for (var i = 0; i < points.length; i++) {\n  //       var j = (i + 1) % points.length;\n\n  //       var pt1 = points[i];\n  //       var pt2 = points[j];\n\n  //       var x1 = pt1[0];\n  //       var x2 = pt2[0];\n  //       var y1 = pt1[1];\n  //       var y2 = pt2[1];\n\n  //       area += x1 * y2;\n  //       area -= y1 * x2;\n\n  //       cx += (x1 + x2) * (x1 * y2 - x2 * y1);\n  //       cy += (y1 + y2) * (x1 * y2 - x2 * y1);\n  //     }\n\n  //     area /= 2;\n\n  //     cx = cx / (6.0 * area);\n  //     cy = cy / (6.0 * area);\n\n  //     return {\n  //       x: cx,\n  //       y: cy,\n  //     };\n  //   }\n\n  //   let center = getCentroid(points);\n\n  useEffect(() => {\n    var mapContainer = document.getElementById(\"map\"), // 지도를 표시할 div\n      mapOption = {\n        center: new kakao.maps.LatLng(myCurAdd[0], myCurAdd[1]), // 지도의 중심좌표\n        level: 10, // 지도의 확대 레벨\n      };\n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\n\n    // var positions = [];\n\n    var positions = [\n      {\n        title: \"카카오\",\n        latlng: new kakao.maps.LatLng(33.450705, 126.570677),\n      },\n      {\n        title: \"생태연못\",\n        latlng: new kakao.maps.LatLng(33.450936, 126.569477),\n      },\n      {\n        title: \"텃밭\",\n        latlng: new kakao.maps.LatLng(33.450879, 126.56994),\n      },\n      {\n        title: \"근린공원\",\n        latlng: new kakao.maps.LatLng(33.451393, 126.570738),\n      },\n    ];\n\n    userInfo.forEach((e) => {\n      positions.push({\n        title: `${e.username}`,\n        latlng: new kakao.maps.LatLng(Number(e.lat), Number(e.lng)),\n      });\n    });\n\n    var imageSrc =\n      \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\";\n\n    //* 중심좌표 렌더부분\n    // var centerPint = new kakao.maps.LatLng(center.x, center.y);\n\n    // console.log(center);\n\n    // var centerMarker = new kakao.maps.Marker({\n    //   map: map,\n    //   position: centerPint, // 마커를 표시할 위치\n    // });\n\n    for (var i = 0; i < positions.length; i++) {\n      // 마커 이미지의 이미지 크기 입니다\n\n      //   console.log(positions[i], positions[i].latlng);\n      var imageSize = new kakao.maps.Size(24, 35);\n\n      // 마커 이미지를 생성합니다\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\n      // 마커를 생성합니다\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: positions[i].latlng, // 마커를 표시할 위치\n        title: positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n        image: markerImage, // 마커 이미지\n      });\n\n      const infowindow = new kakao.maps.InfoWindow({\n        content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${positions[i].title}</div>`,\n      });\n\n      // 인포윈도우를 마커위에 표시합니다\n      infowindow.open(map, marker);\n    }\n  });\n\n  return <div id=\"map\"></div>;\n}\n","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/FindInfo.js",["80"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function FindInfo({ findModalOff }) {\n  const [userinfo, setuserinfo] = useState({\n    userName: '',\n    birth: '',\n    phone: ''\n  });\n\n  const inputValue = (key) => (e) => {\n    setuserinfo({...userinfo, [key]: e.target.value});\n  }\n\n  const findInfo = () => {\n    const user = {userName: userinfo.userName, birth: userinfo.birth, phone: userinfo.phone};\n  \n    if(!user.userName || !user.birth || !user.phone) {\n      alert('모든 항목은 필수입니다')\n    }\n    axios.post('https://localhost:4000/findlongininfo', user,\n      {headers: {'Content-Type': 'application/json'}, withCredentials: true}\n    )\n    .then((res) => {\n      console.log(res);\n    })\n  }\n\n  return (\n    <div className=\"modal\">\n      <fieldset>\n        <span>이름</span>\n        <input type=\"text\" onChange={inputValue('userName')}></input>\n      </fieldset>\n      <fieldset>\n        <span>생년월일</span>\n        <input type=\"text\" onChange={inputValue('birth')}></input>\n      </fieldset>\n      <fieldset>\n        <span>전화번호</span>\n        <input type=\"number\" onChange={inputValue('phone')}></input>\n      </fieldset>\n      <button>찾기</button>\n      <div className=\"button\" onClick={findModalOff}>\n        닫기\n      </div>\n    </div>\n  );\n}\n","/Users/hyeryunchoi/Desktop/firstProject/meet-in-the-middle/client/src/pages/SignUpModal.js",["81"],"import React, { useState } from \"react\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\n// 아이디 닉네임 비밀번호 비밀번호 확인 이름 휴대폰\n\naxios.defaults.withCredentials = true;\n\nexport default function SignUpModal({ signUpModalOff }) {\n  const [userinfo, setuserinfo] = useState({\n    email: '',\n    password: '',\n    passwordCheck: '',\n    userName: '',\n    nickName: '',\n    birth: '',\n    phone: ''\n  });\n  \n  const navigate = useNavigate();\n  \n  const inputValue = (key) => (e) => {\n    setuserinfo({...userinfo, [key]: e.target.value});\n  }\n  \n  const handleSignup = () => {\n    const user = {email: userinfo.email, password: userinfo.password, userName: userinfo.userName,\n      nickName: userinfo.nickName, birth: userinfo.birth, phone: userinfo.phone};\n  \n    if(!user.email || !user.password || !user.userName || !user.nickName || !user.birth || !user.phone) {\n      alert('모든 항목은 필수입니다')\n    }\n    //console.log(user.email);\n    axios.post('https://localhost:4000/signup', user,\n      {headers: {'Content-Type': 'application/json'}, withCredentials: true}\n    )\n    .then((res) => {\n      if(res.payload.success) {\n        navigate('/');\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  };\n  return (\n    <div className=\"modal\" id=\"signUpModal\">\n      <h3>회원가입</h3>\n      <fieldset>\n        <span>이메일</span>\n        <input type=\"email\" onChange={inputValue('email')}/>\n      </fieldset>\n      <fieldset>\n        <span>비밀번호</span>\n        <input type=\"password\" onChange={inputValue('password')}/>\n      </fieldset>\n      <fieldset>\n        <span>비밀번호 확인</span>\n        <input type=\"password\" onChange={inputValue('passwordCheck')}/>\n      </fieldset>\n      <fieldset>\n        <span>이름</span>\n        <input type=\"text\" onChange={inputValue('userName')}/>\n      </fieldset>\n      <fieldset>\n        <span>별명</span>\n        <input type=\"text\" onChange={inputValue('nickName')}/>\n      </fieldset>\n      <fieldset>\n        <span>생년월일</span>\n        <input type=\"number\" onChange={inputValue('birth')}/>\n      </fieldset>\n      <fieldset>\n        <span>휴대폰</span>\n        <input type=\"number\" onChange={inputValue('phone')}/>\n      </fieldset>\n      <div className=\"button\" onClick={handleSignup}>\n        회원가입\n      </div>\n      <div className=\"button\" onClick={signUpModalOff}>\n        닫기\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":46,"column":6,"nodeType":"92","endLine":46,"endColumn":8,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"95","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":23},{"ruleId":"86","severity":1,"message":"96","line":8,"column":9,"nodeType":"88","messageId":"89","endLine":8,"endColumn":14},{"ruleId":"86","severity":1,"message":"97","line":15,"column":7,"nodeType":"88","messageId":"89","endLine":15,"endColumn":13},{"ruleId":"86","severity":1,"message":"94","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"98","line":1,"column":38,"nodeType":"88","messageId":"89","endLine":1,"endColumn":44},{"ruleId":"86","severity":1,"message":"99","line":9,"column":9,"nodeType":"88","messageId":"89","endLine":9,"endColumn":14},{"ruleId":"86","severity":1,"message":"100","line":10,"column":9,"nodeType":"88","messageId":"89","endLine":10,"endColumn":16},{"ruleId":"86","severity":1,"message":"101","line":11,"column":9,"nodeType":"88","messageId":"89","endLine":11,"endColumn":16},{"ruleId":"86","severity":1,"message":"94","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"102","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":70,"column":58,"nodeType":"105","messageId":"106","endLine":70,"endColumn":69},{"ruleId":"103","severity":1,"message":"104","line":79,"column":58,"nodeType":"105","messageId":"106","endLine":79,"endColumn":69},{"ruleId":"86","severity":1,"message":"107","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"108","line":1,"column":10,"nodeType":"109","messageId":"89","endLine":1,"endColumn":15},{"ruleId":"90","severity":1,"message":"110","line":138,"column":6,"nodeType":"92","endLine":138,"endColumn":11,"suggestions":"111"},{"ruleId":"86","severity":1,"message":"107","line":1,"column":28,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"112","line":15,"column":9,"nodeType":"88","messageId":"89","endLine":15,"endColumn":17},{"ruleId":"86","severity":1,"message":"113","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":14},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'SignUpModal' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'useEffect' is defined but never used.","'KakaoMapCurrent' is defined but never used.","'kakao' is assigned a value but never used.","'curDeg' is assigned a value but never used.","'useRef' is defined but never used.","'modal' is assigned a value but never used.","'signBtn' is assigned a value but never used.","'findBtn' is assigned a value but never used.","'userInfo' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useState' is defined but never used.","'kakao' is defined but never used.","Program","React Hook useEffect has missing dependencies: 'curAdd', 'inputAdd', and 'setMyCurAdd'. Either include them or remove the dependency array. If 'setMyCurAdd' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["117"],"'findInfo' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [isAuthenticated]",{"range":"122","text":"123"},"Update the dependencies array to be: [add, curAdd, inputAdd, setMyCurAdd]",{"range":"124","text":"125"},[1151,1153],"[isAuthenticated]",[3918,3923],"[add, curAdd, inputAdd, setMyCurAdd]"]